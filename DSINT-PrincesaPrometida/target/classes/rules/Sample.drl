package com.sample
 
import com.sample.DroolsTest.Message;
import animales.*;
import lugares.*;
import personajes.*;
import relaciones.*;
import utilidades.*;
import java.util.*;
import profesiones.*;


//Creación de la base
rule "0.1 Creación Profesiones"
agenda-group "Acto0"
	then 
		//insert(new BrigadaBrutal());
		//insert(new Curandero());
		//insert(new Desempleado());
		//insert(new Espadachin());
		//insert(new Gobernante());
		insert(new Granjero());
		//insert(new Guardia());
		//insert(new Herrero());
		insert(new Indefinido());
		//insert(new Mercenario());
		insert(new Pirateria());
		//insert(new Sacerdote());
		//insert(new Sirviente());
		//insert(new Visir());
		System.out.println("Profesiones 0");
end 

rule "0.2 Creación Lugares"
	then
		//insert(new AcantiladosLocura());
		//insert(new Bosque());
		//insert(new BosqueLadrones());
		//insert(new CaminoMontana());
		//insert(new CasaMilagrosoMax());
		//insert(new Castillo());
		//insert(new Espana());
		insert(new Granja());
		insert(new HabitacionN());
		insert(new Mar());
		//insert(new PantanoFuego());
		//insert(new PozoDesesperacion());	
		System.out.println("Lugares 0");	
end 

rule "0.3 Creación Animales"
	when 
		//mar: Mar()
		granja: Granja()
		//c: Castillo()
		//bl: BosqueLadrones()
		//pantano: PantanoFuego()
		//cM: CasaMilagrosoMax()
	then
		//insert(new AnguilaChillona(mar));
		insert(new Caballo(granja));
		//insert(new Cabra(cM));
		insert(new Cerdo(granja));
		//insert(new Gallina(bl));
		//insert(new Perro(c));
		//insert(new RoedorAspectoGigantesco(pantano));
		insert(new Vaca(granja));
		System.out.println("Animales 0");
end

rule "0.4 Creación Personajes Acto 0"
	when 
		hab: HabitacionN()
	then
		insert(new Abuelo(hab));
		insert(new Madre(hab));
		insert(new Nieto(hab));
		System.out.println("Abuelo, Madre y Nieto");
end

rule "0.5 Visita familiar"
  when
 	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.noTieneRelacion(ab))
    eval(ab.noTieneRelacion(md))
    eval(md.noTieneRelacion(nt))
  then
    FamiliarDe fm1 = new FamiliarDe(ab);
    FamiliarDe fm2 = new FamiliarDe(md);
    FamiliarDe fm3 = new FamiliarDe(nt);
    
    modify(nt){
    	addRelacion(fm1),
      	addRelacion(fm2);
    }
    
    modify(ab){
    	addRelacion(fm2),
    	addRelacion(fm3);
    }
    
    modify(md){
      	addRelacion(fm1),
     	addRelacion(fm3);
   	}
   	
  	Archivo.getUnicaInstancia().addInf(md.getNombre() + " está cuidando de " 
  	+ nt.getNombre() +" que se encuentra " + nt.getEstadoSalud().getString() 
  	+ " y llega su " +ab.getNombre() + " de visita. " );
end

rule "0.6 Nieto está enfermo"
when
	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.tieneRelacion(ab))
    eval(ab.tieneRelacion(md))
    eval(md.tieneRelacion(nt))
  then
  	modify(md){
  		setUbicacionActual(null);
  	}
  	Archivo.getUnicaInstancia().addInf(md.getNombre()+" se despide y "
  	+ ab.getNombre()+ " lee un cuendo a " + nt.getNombre()+". ");
end

rule "0.7 Inicio cuento"
	when
		hab: HabitacionN()
		Nieto( ubicacionActual == hab )
		Abuelo( ubicacionActual == hab )
		Madre( ubicacionActual == null )
		granja: Granja()
		granjero: Granjero()
	then
		insert(new Westley(granja, granjero));
		insert(new Buttercup(granja, granjero));
		Archivo.getUnicaInstancia().addInf("El cuento es una historia de aventuras y amor.\n");
end

rule "0.8 Amor en la Granja"
	when
		g: Granja()
		gj: Granjero()
		wt: Westley( estadoSalud == EstadoSalud.VIVO, ubicacionActual == g, profesion == gj)
		bt: Buttercup(estadoSalud==EstadoSalud.VIVO, ubicacionActual == g, profesion == gj )
		eval(wt.noTieneRelacion(bt))
    	eval(bt.noTieneRelacion(wt))
	then
		Archivo.getUnicaInstancia().addInf(wt.getNombre() + " y " + bt.getNombre() + " son dos " 
		+ bt.getProfesion().toString()+"s. ");
		
		QuiereA q1 = new QuiereA(bt);
		QuiereA q2 = new QuiereA(wt);
		
		 modify(wt){
	      	addRelacion(q1),
	      	setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
	    }
	    
	    modify(bt){
	    	addRelacion(q2),
	    	setMotivacion(Motivacion.ESTAR_CON_WESTLEY);
	    }
	    Archivo.getUnicaInstancia().addInf("Cuando " + bt.getNombre() + " le manda una tarea a " 
		+wt.getNombre() + ", él siempre contesta \"Como desees\", que en realidad significa \"Te amo\". "  );
end

rule "0.9 Westley se va a hacer fortuna"
    when
    	m: Mar()
   		g: Granja()
        wt: Westley( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
   		pir: Pirateria()
   		inf: Indefinido()
    then
    	
    	modify(wt){
    		setMotivacion(Motivacion.GANAR_DINERO),
    		setUbicacionActual(m),
    		setProfesion(inf);
    	}
     	Archivo.getUnicaInstancia().addInf("Como " + wt.getNombre()+ " no tiene dinero se marcha a " 
     	+ m.getNombre() + " para " + wt.getMotivacion().getString() +". ");
     	insert (new Pirata(m, pir));
end

rule "0.10 Westley muere"
    when
    	m: Mar()
        wt: Westley(ubicacionActual == m, estadoSalud==EstadoSalud.VIVO, motivacion == Motivacion.GANAR_DINERO)
   		pir: Pirata(ubicacionActual == m)
    then
    	modify(wt){
    		setEstadoSalud(EstadoSalud.MUERTO);
    	}
     	Archivo.getUnicaInstancia().addInf("En " +m.getNombre()+ " " + wt.getNombre() 
     	+ " es asesinado por " + pir.getNombre()+". ");
end

rule "0.11 Buttercup odia al pirata"
    when
    	g :Granja()
    	m: Mar()
    	Westley(estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    	bt: Buttercup( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_WESTLEY)
    	pr: Pirata( ubicacionActual == m )
    then
    	OdiaA od1 = new OdiaA(pr);
    	OdiadoPor od2 = new OdiadoPor(bt);
    	
	    modify(bt){
	          addRelacion(od1),
	          setMotivacion(Motivacion.DESCONOCIDA);
	    }
	 
	    modify(pr){
	          addRelacion(od2);
	    }
	    Archivo.getUnicaInstancia().addInf(bt.getNombre()+ " " +bt.getRelacion(pr).toString() + 
	    " por la muerte de Westley y pierde su motivación. ");
end

//Modificar esta relación
rule "Relacion Conocer"
    when
        p1 : Personaje(ubicacionActual != null)
        p2 : Personaje(nombre != p1.getNombre(), ubicacionActual == p1.getUbicacionActual() )
        eval (p1.noTieneRelacion(p2))
    then

        Relacion r = new ConoceA(p2);
        Relacion r2 = new ConocidoDe(p1);
        modify(p1){
        	addRelacion(r);
        }
        modify(p2){
        	addRelacion(r2);
        } 
end
//Fin acto0

// Inicio Acto1
rule "1.1 Lugares Acto1"
agenda-group "Acto1"
	then
		insert(new Castillo());
		insert(new Espana());
		insert(new Bosque());
		insert(new AcantiladosLocura());
		insert(new CaminoMontana());
end

rule"1.2 Profesiones Acto1"
	then
		insert(new Mercenario());
		insert(new Gobernante());
		insert(new Visir());
		insert(new Herrero());
		insert(new Desempleado());
end

rule "1.3 Creación de Personajes Acto1"
	when 
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
	then
		insert(new Vizzini(bosque, mercenario ));
		insert(new Inigo(bosque, mercenario));
		insert(new Fezzik(bosque, mercenario));
		insert(new Rey(castillo, gobernante));
		insert(new Principe(castillo, gobernante));
		insert(new Conde(castillo, visir));
		insert(new PadreInigo(esp, herrero));
		insert(new AnguilaChillona(mar));
end

rule "1.4 El Rey"
	when
		g: Gobernante()
		r: Rey(profesion == g)
		eval(r.noTieneTitulo())
	then
		modify(r){
			setTit(TituloNobiliario.REY);
		}
end

rule "1.5 El Príncipe"
	when
		g: Gobernante()
		p: Principe(profesion == g)
		eval(p.noTieneTitulo())
	then
		modify(p){
			setTit(TituloNobiliario.PRINCIPE);
		}
		
end
rule "1.6 El Conde"
	when
		v: Visir()
		c: Conde( profesion==v )
		eval(c.noTieneTitulo())
	then
		modify(c){
			setTit(TituloNobiliario.CONDE);
		}
end

rule "1.7 Rey y Príncipe son familia"
  when
  	g: Gobernante()
    pr: Principe(profesion == g)
    ry: Rey(profesion == g)
    eval(pr.esConocido(ry))
  then
  	Relacion r1 = pr.getRelacion(ry);
  	Relacion r2 = ry.getRelacion(pr);
    FamiliarDe fm1 = new FamiliarDe(ry);
    FamiliarDe fm2 = new FamiliarDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(fm1);
    }
    modify(ry){
    	removeRelacion(r2),
      	addRelacion(fm2);
    }
end

rule "1.8 Principe y Conde amigos"
  when
  	g: Gobernante()
  	v: Visir()
    pr: Principe( profesion == g)
    cd: Conde(profesion ==v )
    eval(pr.esConocido(cd))
  then
  	Relacion r1 = pr.getRelacion(cd);
  	Relacion r2 = cd.getRelacion(pr);
    Relacion am1 = new AmigoDe(cd);
    Relacion am2 = new AmigoDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(am1);
    }
    
    modify(cd){
    	removeRelacion(r2),
      	addRelacion(am2),
      	setMotivacion(Motivacion.SERVIR_PRINCIPE);
    }
end

rule "1.9 El príncipe quiere a Buttercup"
  when
    pr: Principe(estadoSalud == EstadoSalud.VIVO)
    bt: Buttercup( )
    eval(pr.noTieneRelacion(bt))
  then
    QuiereA q1 = new QuiereA(bt);
    modify(pr){
          addRelacion(q1),
          setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
    }
    Archivo.getUnicaInstancia().addInf(pr.getNombre() + " quiere a " + bt.getNombre()+ ".");
end

rule "1.4 Buttercup prometida del príncipe"
  when
  	m: Mar()
    pr: Principe(motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
    bt: Buttercup( )
    Westley( estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    c: Castillo()
    eval(bt.noTieneRelacion(pr))
  then
    Relacion p1 = new PrometidaDe(pr);
    Relacion p2 = new PrometidoDe(bt);
    modify(bt){
          addRelacion(p1),
          setUbicacionActual(c);
    }
    modify(pr){
          addRelacion(p2);
    }
    
    Archivo.getUnicaInstancia().addInf("El Príncipe y Buttercup se prometen y se anuncia la boda.");
end

rule "1.5 Buttercup sale a pasear"
	when
		b: Bosque()
		c: Castillo()
		bt: Buttercup(ubicacionActual == c)
		we: Westley(estadoSalud == EstadoSalud.MUERTO)
		Principe(ubicacionActual == c, motivacion == Motivacion.ESTAR_CON_BUTTERCUP )
	then
		modify(bt){
			setUbicacionActual(b);
		}
	    Archivo.getUnicaInstancia().addInf("Buttercup sale a pasear al bosque.");
end			

rule "1.6 Secuestro Buttercup"
	when
		b: Bosque();
		princesa: Buttercup(ubicacionActual == b)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == b, profesion == mer)
		i: Inigo(ubicacionActual == b, profesion == mer)
		f: Fezzik(ubicacionActual == b, profesion == mer)
	then
		modify(i){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(f){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(v){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + "," + i.getNombre() + " y " + f.getNombre() + " secuestran a "+ princesa.getNombre()+".");
end

rule "1.7 Huida por el mar"
	when
		b: Bosque();
		princesa: Buttercup(ubicacionActual == b)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == b, profesion == mer, motivacion == Motivacion.SECUESTRAR_PRINCESA)
		i: Inigo(ubicacionActual == b, profesion == mer)
		f: Fezzik(ubicacionActual == b, profesion == mer)
		mar: Mar()
	then
		modify(v){
			setMotivacion(Motivacion.DECLARAR_GUERRA),
			setUbicacionActual(mar);
		}
		modify(princesa){
			setUbicacionActual(mar);
		}
		modify(i){
			setUbicacionActual(mar);
		}
		modify(f){
			setUbicacionActual(mar);
		}
		Archivo.getUnicaInstancia().addInf("Los mercenarios se llevan a Buttercup por el mar para llegar a la frontera de Guilder.");
		
end

rule "1.8 Anguila ataca a buttercup"
	when 
		m: Mar();
		bt: Buttercup(ubicacionActual == m )
		a: AnguilaChillona(ubicacionActual == m)
	then 
		modify(bt){
			setEstadoSalud(EstadoSalud.EN_PELIGRO);
		}
		System.out.println("ATACA ANGUILA");
		Archivo.getUnicaInstancia().addInf(bt.getNombre() + " intenta escapar y en el agua es atacada por " + a.getNombre() + ", ahora ella está " + bt.getEstadoSalud().getString() +".");
end

rule "1.9 Fezzik salva a Buttercup"
	when 
		m: Mar()
		bt: Buttercup( estadoSalud == EstadoSalud.EN_PELIGRO, ubicacionActual == m )
		fz: Fezzik( ubicacionActual == m )
		a: AnguilaChillona( ubicacionActual== m)
	then
		modify(bt){
			setEstadoSalud(EstadoSalud.VIVO);
		}
		modify(a){
			setEstadoSalud(EstadoSalud.MUERTO);
		}		
		Archivo.getUnicaInstancia().addInf(fz.getNombre()+" salva a " + bt.getNombre() + ", la anguila muere.");		
end

rule "1.10 Llegada a los acantilados"
	when
		m: Mar( )
		acantilados: AcantiladosLocura(  )
		an: AnguilaChillona(ubicacionActual == m , estadoSalud == EstadoSalud.MUERTO)
		v: Vizzini( ubicacionActual == m)
		bt: Buttercup(ubicacionActual == m)
		f: Fezzik( ubicacionActual == m)
		i: Inigo( ubicacionActual == m)
		p: Pirata( ubicacionActual == m )
	then
		modify(i){
			setUbicacionActual(acantilados)
		}
		modify(f){
			setUbicacionActual(acantilados)
		}
		modify(bt){
			setUbicacionActual(acantilados)
		}
		modify(v){
			setUbicacionActual(acantilados)		
		}
		modify(p){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA)
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + "," + f.getNombre() + "," + i.getNombre() + "y" + bt.getNombre() + " llegan a " + acantilados.getNombre());
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " quiere " + p.getMotivacion().getString());
end

rule "1.11 Pirata llega a los acantilados"
	when
		m:Mar()
		cm: CaminoMontana()
		ac: AcantiladosLocura()
		p: Pirata( ubicacionActual == m )
		i: Inigo( ubicacionActual == ac )
		v: Vizzini(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		bt: Buttercup(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		f: Fezzik(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
	then
		modify(p){
			setUbicacionActual(ac)
		}
		modify(bt){
			setUbicacionActual(cm)
		}
		modify(v){
			setUbicacionActual(cm)
		}
		modify(f){
			setUbicacionActual(cm)
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + "," + f.getNombre() + " y " + bt.getNombre() + " huyen a " + cm.getNombre());
		Archivo.getUnicaInstancia().addInf( p.getNombre() + " llega a " + ac.getNombre());
end

rule "1.12 Historia Domingo Montoya"
	when
		ac: AcantiladosLocura()
		p: Pirata( ubicacionActual == ac )
		i: Inigo( ubicacionActual == ac )
		pi: PadreInigo(estadoSalud == EstadoSalud.MUERTO)
	then
		Relacion fm1 = new FamiliarDe(pi);
	    Relacion fm2 = new FamiliarDe(i);
	    ArrayList<Relacion> listaR = i.getRelacionesPersonaje();
	    listaR.add(fm1);
	    
	    modify(i){
	      setRelacionesPersonaje(listaR);
	    }
	    ArrayList<Relacion> listaR2 = pi.getRelacionesPersonaje();
	    listaR2.add(fm2);
	    modify(pi){
	      setRelacionesPersonaje(listaR2);
	    }
		modify(i){
			setMotivacion(Motivacion.VENGAR_PADRE);
		}
		Archivo.getUnicaInstancia().addInf("Domingo Montoya está muerto y su hijo " + i.getNombre() + " busca venganza");
end

rule "1.13 Pirata vence a Iñigo"
	when
		ac: AcantiladosLocura()
		cm: CaminoMontana()
		mercenario: Mercenario()
		p: Pirata(ubicacionActual == ac)
		i: Inigo(ubicacionActual == ac, profesion == mercenario, estadoSalud == EstadoSalud.VIVO)
	then
		modify(i){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(p){
			setUbicacionActual(cm)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + i.getNombre() +" y sigue la persecución");
		
end 

rule "1.14 Pirata vence a Fezzik"
	when
		cm : CaminoMontana()
		ac: AcantiladosLocura()
		des: Desempleado()
		p: Pirata(ubicacionActual == cm)
		f: Fezzik(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		i: Inigo(estadoSalud == EstadoSalud.INCONSCIENTE, ubicacionActual == ac)
	then
		modify(f){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(i){
			setUbicacionActual(null)
		}
		
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + f.getNombre());
end

rule "1.15 Principe llega a los acantilados"
	when
		ac: AcantiladosLocura()
		cm: CaminoMontana()
		des: Desempleado()
		p: Pirata(ubicacionActual == cm)
		f: Fezzik(ubicacionActual == cm, estadoSalud == EstadoSalud.INCONSCIENTE)
		pr: Principe(motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		cd: Conde()
	then
		modify(pr){
			setUbicacionActual(ac)
		}
		modify(cd){
			setUbicacionActual(ac)
		}
		modify(pr){
			setMotivacion(Motivacion.SALVAR_BUTTERCUP);
		}
		modify(f){
			setUbicacionActual(null),
			setEstadoSalud(EstadoSalud.INCONSCIENTE);
		}
		
		Archivo.getUnicaInstancia().addInf("Príncipe llega a los acantilados para salvar a Buttercup");
end 

rule "1.16 Muere Vizzini"
	when 
		cm : CaminoMontana()
		p: Pirata(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		v: Vizzini(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		des: Desempleado()
		i: Inigo(estadoSalud == EstadoSalud.INCONSCIENTE)
		f: Fezzik(estadoSalud == EstadoSalud.INCONSCIENTE)
	then 
		modify(v){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		modify(i){
			setProfesion(des);
		}
		modify(f){
			setProfesion(des);
		}
		Archivo.getUnicaInstancia().addInf("Vizzini está " + v.getEstadoSalud().getString() + " por " + p.getNombre());
end
//Las ubicaciones y empleos de Fezzik e Íñigo ya han sido modificadas en las reglas anteriores, 
//ya no hay que modificarlo en el acto2

/*** ACTO 2 El	príncipe	sigue	las	huellas	hasta	que	se	produce	el beso	de	amor	verdadero****/
rule "Creación Acto2"
agenda-group "Acto2"
	then
		insert(new Colina());
		insert(new Espadachin());
		System.out.println("Lugares 2");	
end 
rule "2.1 Pirata y Buttercup huyen"
	when 
		camino : CaminoMontana()
		v: Vizzini(estadoSalud == EstadoSalud.MUERTO)
		b: Buttercup(ubicacionActual == camino)
		p: Pirata(ubicacionActual == camino)
		colina: Colina()
	then 
		modify(b){
			setUbicacionActual(colina)
		}
		modify(p){
			setUbicacionActual(colina)
		}
		Archivo.getUnicaInstancia().addInf("El pirata y Buttercup huyen hacia la colina");
end

rule "2.2 Principe rastrea a Buttercup"
	when 
		ac: AcantiladosLocura()
		pirata: Pirata(ubicacionActual != ac) //soolo llega cuando ya no esten alli.
		p: Principe(ubicacionActual == ac)
		cm: CaminoMontana()
		conde: Conde(ubicacionActual == ac)
		co: Colina()
	then 
		modify(p){
			setUbicacionActual(cm)
		}
		modify(conde){
			setUbicacionActual(cm)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " rastrea a su prometida hasta "+ cm.getNombre());
end 

rule "2.3 Buttercup descubre quien es su secuestrador"
	when 
		colina: Colina()
		but: Buttercup(ubicacionActual == colina)
		pir: Pirata(ubicacionActual == colina)
	then 
		Archivo.getUnicaInstancia().addInf(but.getNombre() +" descubre que ha sido secuestrada por " + pir.getNombre());
	
end

rule "2.4 Principe alcanza a la princesa"
	when 
		co: Colina()
		cm: CaminoMontana()
		but: Buttercup(ubicacionActual == co)
		pir: Pirata(ubicacionActual == co)
		prin: Principe(ubicacionActual == cm)
		conde: Conde(ubicacionActual == cm)
	then 
		modify(prin){
			setUbicacionActual(co)
		}
		modify(conde){
			setUbicacionActual(co)
		}
		Archivo.getUnicaInstancia().addInf(prin.getNombre() + " alcanza a la princesa en " + co.getNombre());
end

rule "2.5 Como Desees en la colina"
	when 
		co: Colina()
		we: Westley(estadoSalud == EstadoSalud.MUERTO)
		bu: Buttercup(ubicacionActual == co)
		pr: Principe (ubicacionActual == co)
		pi: Pirata(ubicacionActual == co)
		es: Espadachin()
		
	then 
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " empuja a " + pi.getNombre()+ " y grita: COMO DESEES.");
		modify(we){
			setEstadoSalud(EstadoSalud.VIVO),
			setUbicacionActual(co),
			setProfesion(es);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " se tira por " + co.getNombre());
		Archivo.getUnicaInstancia().addInf("Se produce el beso de amor verdadero");
		
//no se que hacer con el principe ni el pirata xD
		
end
/*
rule "ubicacionPirata"
	when
		w: Westley(estadoSalud == EstadoSalud.VIVO)
		p: Pirata(ubicacionActual != w.getUbicacionActual)
	then 
		modify(p){
			setUbicacionActual(w.getUbicacionActual());
		}
end 
*/



/*** ACTO 3  Buttercup	y	Westley	llegan	al	pantano	hasta que	muere	el	rey****/

rule "Creacion Acto3"
	agenda-group "Acto3"
	then 
		insert(new PantanoFuego());
		insert(new PozoDesesperacion());
end 

rule "3.1 Necesario Acto3"
	when 
		p: PantanoFuego()
	then
		insert(new RoedorAspectoGigantesco(p));
end 

rule "3.2 Adentrar en el pantano"
	when 
		co: Colina()
		bu: Buttercup(ubicacionActual == co)
		pa: PantanoFuego()
		we: Westley(estadoSalud == EstadoSalud.VIVO,ubicacionActual == co)
		pr: Principe(ubicacionActual == co)
	then
		modify(bu){
			setUbicacionActual(pa);
		}
		modify(we){
			setUbicacionActual(pa);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() +" y " + we.getNombre() + " se adentran en " +pa.getNombre());
end 

rule "3.3 Primer Horror"
	when
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
	then
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " +bu.getNombre() +" superan las erupciones de fuego, ya que son precedidas de un sonido de burbuja");
end 

rule "3.4 Leyenda del capitan Robert"
	when
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
		es: Espadachin()
	then 
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " cuenta a " + bu.getNombre() + " como el capitan Robert le hace ayudante");
		modify(we)}{
			setProfesion(es);
		}
end 	

rule "3.5 Segundo Horror" 
	when 
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
	then 
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " +bu.getNombre() + " superan el segundo horror: las arenas resplandecientes, ya que saben que aspecto tienen");
end

rule "3.6 Tercer Horror"
	when 
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
		rag: Animal(ubicacionActual == pa)		
	then 
		modify(rag){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " mata a " + rag.getNombre());
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " + bu.getNombre() + " superan el tercer horror");
end 

rule "3.7 Principe va a la salida del pantano"
	when 
		pa: PantanoFuego()
		co: Colina()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
		pr: Principe (ubicacionActual == co)
		bo: Bosque()
		conde: Conde(ubicacionActual == co)
	then 
		modify(pr){
			setUbicacionActual(bo);
		}
		modify(conde){
			setUbicacionActual(bo);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " va a " + pr.getUbicacionActual());
end 

rule "3.8 Salen del pantano de fuego"
	when 
		pa: PantanoFuego()
		bo: Bosque()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
		rag: Animal(ubicacionActual == pa, estadoSalud == EstadoSalud.MUERTO)
		pr: Principe(ubicacionActual == bo)
	then 
		modify(bu){
			setUbicacionActual(bo);
		}
		modify(we){
			setUbicacionActual(bo);
		}
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " + bu.getNombre() + " salen de " + pa.getNombre() + " encontrandose con " + pr.getNombre());
end 

rule "3.9 promesa de vida"
	when 
		bo: Bosque()
		ca: Castillo()
		we: Westley(ubicacionActual == bo)
		bu: Buttercup(ubicacionActual == bo)
		pr: Principe(ubicacionActual == bo)		
		conde: Conde(ubicacionActual == bo)
		po: PozoDesesperacion()
	then 
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " se entrega, con la condicion de que " + we.getNombre() + " seguira " + we.getEstadoSalud());
		modify(we){
			setUbicacionActual(po);
		} 
		modify(bu){
			setUbicacionActual(ca);
		}
		modify(pr){
			setUbicacionActual(ca);
		}
		modify(conde){
			setUbicacionActual(ca);
		}
		
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " descubre que " + conde.getNombre() + " tiene 6 dedos");
		Archivo.getUnicaInstancia().addInf(conde.getNombre() + "," + bu.getNombre() + " y " + pr.getNombre() + " van al  Castillo");
end 

//Westley en el pozo

//Muerte del rey

/*** ACTO 4 	Presentación	de	la	Nueva	Reina	hasta la	muerte de	Westley ****/

rule "4.0 Creacion Acto4"
agenda-group "Acto4"
	then
		insert(new Guardia());
		insert(new PatioCastillo());
end

rule "4.1 Creación de Personajes Acto4"
	when
		pa: PatioCastillo()
		ca: Castillo()
		ind: Indefinido()
		gu: Guardia()
	then
		insert(new Anciana(pa,ind));
		insert(new Yalin(ca, gu));
		Archivo.getUnicaInstancia().addInf("\n Acto 4\n");	
end


rule "Sueño Buttercup"
	when
		ca: Castillo()
		pa: PatioCastillo()	
		wes: Westley()
		rey: Rey()
		an: Anciana(ubicacionActual == pa)
		conde: Conde(ubicacionActual == ca)
		bu: Buttercup(ubicacionActual == ca)
		pr: Principe (ubicacionActual == ca)
	then

		modify(conde){
			setUbicacionActual(pa);
		} 
		modify(bu){
			setUbicacionActual(pa);
		}
		modify(pr){
			setUbicacionActual(pa);
		}	
		modify(an){
			setUbicacionActual(null);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " sueña que " + rey.getNombre() + " muere y se casa con " + pr.getNombre());
		Archivo.getUnicaInstancia().addInf(an.getNombre() + " abuchea a " + bu.getNombre() + " por no casarse con " + wes.getNombre() + " y renunciar al amor verdadero");	
		
end

rule "Trato principe"
	when
	ca: Castillo()
	pa: PatioCastillo()
	po: PozoDesesperacion()
	pr: Principe (ubicacionActual == pa)
	bu: Buttercup(ubicacionActual == pa)
	conde: Conde(ubicacionActual == pa)
	we: Westley(ubicacionActual == po)
		
	then
		modify(conde){
			setUbicacionActual(ca);
		} 
		modify(bu){
			setUbicacionActual(ca);
		}
		modify(pr){
			setUbicacionActual(ca);
		}
		modify(we){
			setEstadoSalud(EstadoSalud.EN_PELIGRO);
		}
		
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " hace un trato con " + bu.getNombre() + " para casarse con ella");
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " planea matar a " + bu.getNombre() + " para incriminar a la nacion enemiga y declarar la guerra");
	
end
/*
rule "Tortura a Westley"
	when
	po: PozoDesesperacion()
	ca: Castillo()
	wes: Westley(ubicacionActual == po, estadoSalud == EstadoSalud.EN_PELIGRO)
	conde: Conde(ubicacionActual == ca)
	
	then
		modify(conde){
			setUbicacionActual(po);
		}
		Archivo.getUnicaInstancia().addInf(conde.getNombre() + " tortura a " + wes.getNombre() + " en " + po.getNombre()); 
	
end


rule "Pricipe ordena a Yalin"
	when
		ca: Castillo()
		pr: Principe (ubicacionActual == ca)
		ya: Yalin(ubicacionActual == ca)
		bl: BosqueLadrones()
	then
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " ordena a " + ya.getNombre() + " vaciar " + bl.getNombre());
end

rule "Reencuentro Iñigo y Fezzik"
	when
		// ubicacion actual ???? 
		iñ: Inigo()
		fe: Fezzik(ubicacionActual == null)
		bl: BosqueLadrones()
	then
		modify(iñ){
			setUbicacionActual(bl);
		}
		modify(fe){
			setUbicacionActual(bl),
			setEstadoSalud(EstadoSalud.BORRACHO);
		}
		
		Archivo.getUnicaInstancia().addInf(fe.getNombre() + " encuentra borracho a " + iñ.getNombre() + " en " + bl.getNombre());
		
end

rule "Iñigo y Fezzik buscan a Westley"
	when
		bl: BosqueLadrones()
		conde: Conde()
		iñ: Inigo(ubicacionActual == bl)
		fe: Fezzik(ubicacionActual == bl)
	then
		modify(iñ){
			setEstadoSalud(EstadoSalud.RECUPERADO);
		}
		
		Archivo.getUnicaInstancia().addInf(fe.getNombre() + " ayuda a " + iñ.getNombre() + " a recuperarse");
		Archivo.getUnicaInstancia().addInf(iñ.getNombre() + " se entera de quien es realmente " + conde.getNombre());

end

rule "Buttercup descubre mentira Principe"
	when
		ca: Castillo()
		ap: AposentosPrincesa()
		bu: Buttercup(UbicacionActual == ca)
		pr: Principe(UbicacionActual == ca)
	then
		modify (bu){
			setUbicacionActual(ap);
		}
		
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " descubre la mentira de " + pr.getNombre() + " en " + ca.getNombre());
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " insulta a " + pr.getNombre() + " y este la encierra en " + ap.getNombre());
		

end

rule "Tortura extrema a Westley"
	when
		po: PozoDesesperacion()
		ca: Castillo()
		pr: Principe(UbicacionActual == ca)
		wes: Westley(ubicacionActual == po)
		conde: Conde(ubicacionActual == po)
	then
		modify (pr){
			setUbicacionActual(po);
		}
		modify(wes){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " tortura de forma extrema a " + wes.getNombre() + " en " + po.getNombre());  



end
 
 
rule "Iñigo y Fezzik encuentran a Westley"
	when
		bl: BosqueLadrones()
		po: PozoDesesperacion()
		iñ: Inigo(ubicacionActual == bl)
		fe: Fezzik(ubicacionActual == bl)
		wes: Westley(ubicacionActual == po)
		pi: PadreInigo()
	then
		modify(iñ){
			setUbicacionActual(po);
		}
		modify(fe){
			setUbicacionActual(po);
		}
		
		Archivo.getUnicaInstancia().addInf(iñ.getNombre() + " y " + fe.getNombre() + " se encuentran con el sirviente y lo interrogan hasta que " + fe.getNombre() + " lo golpea");
		Archivo.getUnicaInstancia().addInf(iñ.getNombre() + " gracias a la ayuda de " + pi.getNombre() + " encuentran a " + iñ.getNombre()  + " en " + po.getNombre());
end

*/


/*** ACTO 5 || ACTO FINAL  Llegan	a	casa	del	Milagroso	Max	hasta	el	final. ****/

rule "Creación de Personajes Acto5"
	agenda-group "Acto5"
	when
		cur: Curandero()
		sac: Sacerdote()
		visir: Visir()
		ig: IglesiaCastillo()
		cs: CasaMilagrosoMax()
	then
		insert(new Max(cs, cur ));
		insert(new Valerie(cs, cur));
		insert(new Obispo(ig, sac));
		Archivo.getUnicaInstancia().addInf("Acto5: Se crean los personajes");
end

rule "Comprar un milagro"
	when
		pd: PozoDesesperacion()
		cs: CasaMilagrosoMax()
		bb: BrigadaBrutal()
		cur: Curandero()
		i: Inigo(ubicacionActual == pd)
		w: Westley(ubicacionActual == pd, estadoSalud == EstadoSalud.MUERTO)
		f: Fezzik(ubicacionActual == pd, profesion == bb)
		m: Max(ubicacionActual == cs, profesion == cur, estadoSalud == EstadoSalud.VIVO)
	then
		modify(i){
			setUbicacionActual(cs);
		}
		modify(f){
			setUbicacionActual(cs);
		}
		modify(w){
			setUbicacionActual(cs);
		}
	    modify(m){
	          setMotivacion(Motivacion.GANAR_DINERO);
	    }
		System.out.println("Llegada a la casa del milagrero");
end

rule "Está Medio Muerto"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MUERTO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
	then
		modify(w){
			setEstadoSalud(EstadoSalud.MEDIO_MUERTO);
		}
		modify(w){
	          setMotivacion(Motivacion.AMOR_VERDADERO);
	    }
		System.out.println("Se descubre que está medio muerto");
end

rule "Discusión de matrimorio"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
	then
		modify(m){
	          setEstadoCivil(EstadoCivil.CASADO);
	    }
	    modify(v){
	          setEstadoCivil(EstadoCivil.CASADO);
	    }
	    Relacion fm1 = new FamiliarDe(v);
	    Relacion fm2 = new FamiliarDe(m);
	    ArrayList<Relacion> listM = m.getRelacionesPersonaje();
	    listM.add(fm1);
	    modify(m){
	      setRelacionesPersonaje(listM);
	    }
	     ArrayList<Relacion> listV = v.getRelacionesPersonaje();
	    listV.add(fm2);
	    modify(v){
	      setRelacionesPersonaje(listV);
	    }
		System.out.println("Max y Valerie tienen una discusión");
end

rule "Causa noble"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
		princ: Principe()
	then
		System.out.println("Si Westley revive el príncipe sufrirá humillaciones a mansalba");
		Relacion od1 = new OdiaA(princ);
    	Relacion od2 = new OdiadoPor(m);
    	
    	ArrayList<Relacion> listaR1 = m.getRelacionesPersonaje();
   		listaR1.add(od1);
	    modify(m){
	          setRelacionesPersonaje(listaR1);
	    }
    	ArrayList<Relacion> listaR2 = princ.getRelacionesPersonaje();
   		listaR2.add(od2);
	    modify(princ){
	          setRelacionesPersonaje(listaR2);
	    }
	    modify(m){
	          setMotivacion(Motivacion.HUMILLAR_PRINCIPE);
	    }
	    System.out.println("Max hace la píldora");
end

rule "Plan de asalto"
	when
		cs: CasaMilagrosoMax()
		mc: MurallaCastillo()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO)
		f: Fezzik(ubicacionActual == cs)
	then
		modify(i){
			setUbicacionActual(mc);
		}
		modify(f){
			setUbicacionActual(mc);
		}
		modify(w){
			setUbicacionActual(mc);
		}
		modify(w){
			setEstadoSalud(EstadoSalud.DEBIL);
		}
	    System.out.println("La píldora surge efecto y trazan el plan para entrar al castillo");
end

rule "La Boda oficial primera parte"
	when
		ig: IglesiaCastillo()
		cast: Castillo()
		r: Rey(ubicacionActual == cast)
		b: Buttercup(ubicacionActual == cast)
		pr: Principe(ubicacionActual == cast)
		cd: Conde(ubicacionActual == cast)
		ob: Obispo(ubicacionActual == ig)
	then
		modify(r){
			setUbicacionActual(ig);
		}
		modify(b){
			setUbicacionActual(ig);
		}
		modify(pr){
			setUbicacionActual(ig);
		}
		modify(cd){
			setUbicacionActual(ig);
		}
	    System.out.println("Inicio de la boda");
end

rule "Inicio del plan"
	when
		pc: PuertaCastillo()
		mc: MurallaCastillo()
		y: Yalin(ubicacionActual == pc)
		i: Inigo(ubicacionActual == mc)
		w: Westley(ubicacionActual == mc)
		f: Fezzik(ubicacionActual == mc)
	then
		modify(i){
			setUbicacionActual(pc);
		}
		modify(f){
			setUbicacionActual(pc);
		}
		modify(w){
			setUbicacionActual(pc);
		}
	    System.out.println("Inicio del plan para entrar al castillo");
end

rule "La Boda oficial segunda parte"
	when
		ig: IglesiaCastillo()
		pc : PasilloCastillo()
		r: Rey(ubicacionActual == ig)
		b: Buttercup(ubicacionActual == ig)
		pr: Principe(ubicacionActual == ig)
		cd: Conde(ubicacionActual == ig)
		ob: Obispo(ubicacionActual == ig)
	then
		modify(cd){
			setUbicacionActual(pc);
		}
	    System.out.println("el conde abandona la boda con algunos guardias");
end

rule "Entrada al Castillo"
	when
		pc: PuertaCastillo()
		pas : PasilloCastillo()
		y: Yalin(ubicacionActual == pc)
		i: Inigo(ubicacionActual == pc)
		w: Westley(ubicacionActual == pc)
		f: Fezzik(ubicacionActual == pc)
	then
	    System.out.println("Los guardias se asustan y Yalin les da la llave para entrar");
	    modify(i){
			setUbicacionActual(pas);
		}
		modify(f){
			setUbicacionActual(pas);
		}
		modify(w){
			setUbicacionActual(pas);
		}
end

rule "La Boda oficial fin"
	when
		ig: IglesiaCastillo()
		pc : PasilloCastillo()
		cas : Castillo()
		r: Rey(ubicacionActual == ig)
		b: Buttercup(ubicacionActual == ig)
		pr: Principe(ubicacionActual == ig)
		ob: Obispo(ubicacionActual == ig)
	then
		modify(pr){
			setUbicacionActual(cas);
		}
		modify(r){
			setUbicacionActual(cas);
		}
		modify(b){
			setUbicacionActual(cas);
		}
		modify(b){
			setEstadoCivil(EstadoCivil.CASADO);
		}
		modify(pr){
			setEstadoCivil(EstadoCivil.CASADO);
		}
	    System.out.println("Termina la boda");
end

rule "Encuentro con el Conde"
	when
		pas : PasilloCastillo()
		sc : SalonCastillo()
		c: Conde(ubicacionActual == pas)
		i: Inigo(ubicacionActual == pas)
		w: Westley(ubicacionActual == pas)
		f: Fezzik(ubicacionActual == pas)
	then
	    System.out.println("Iñigo mata a los guardias y el conde sale huyendo");
	    modify(i){
			setUbicacionActual(sc);
		} 
		modify(c){
			setUbicacionActual(sc);
		} 
		System.out.println("Westley desaparece");
	    modify(w){
			setUbicacionActual(null);
		}   
		modify(f){
			setUbicacionActual(null);
		} 
end

rule "Charla con el Rey"
	when
		cas : Castillo()
		ap: AposentosPrincesa()
		r: Rey(ubicacionActual == cas)
		b: Buttercup(ubicacionActual == cas, estadoCivil == EstadoCivil.CASADO)
	then
		System.out.println("Buttercup tiene aprecio por el Rey");
		Relacion am1 = new AmigoDe(r);
    	Relacion am2 = new AmigoDe(b);
    	
    	ArrayList<Relacion> listaR1 = b.getRelacionesPersonaje();
   		listaR1.add(am1);
	    modify(b){
	          setRelacionesPersonaje(listaR1);
	    }
    	ArrayList<Relacion> listaR2 = r.getRelacionesPersonaje();
   		listaR2.add(am2);
	    modify(r){
	          setRelacionesPersonaje(listaR2);
	    }
	    
	    System.out.println("Buttercup le dice al rey que lo ha hecho por él y que se suicidadrá en sus aposentos");
	    modify(r){
			setUbicacionActual(null);
		}
		modify(b){
			setUbicacionActual(ap);
		}
end

rule "Enfrentamiento con el Conde"
	when
		sc : SalonCastillo()
		c: Conde(ubicacionActual == sc)
		i: Inigo(ubicacionActual == sc)
	then
	    System.out.println("El conde lanza un cuchillo que hiere a Iñigo");
	    modify(i){
			setEstadoSalud(EstadoSalud.HERIDO);
		}   
end

rule "Reencuentro"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, motivacion == Motivacion.SUICIDARSE)
		w: Westley(ubicacionActual == null, estadoSalud == EstadoSalud.DEBIL)
	then
	    modify(w){
			setUbicacionActual(ap);
		}
		System.out.println("Buttercup intenta suicidarse pero Westley la detiene");
		modify(b){
			setMotivacion(Motivacion.ESTAR_CON_WESTLEY);
		}
		modify(w){
			setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
		}
		System.out.println("Buttercup se lanza a darle amor a Westley, pero este está débil");
end

rule "Prepárate a morir"
	when
		sc : SalonCastillo()
		c: Conde(ubicacionActual == sc)
		i: Inigo(ubicacionActual == sc, estadoSalud == EstadoSalud.HERIDO)
	then
	    System.out.println("Hola, me llamo Íñigo Montoya. Tú mataste a mi padre. Prepárate a morir");
		modify(c){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
end

rule "Vacío legal"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, motivacion == Motivacion.ESTAR_CON_WESTLEY)
		w: Westley(ubicacionActual == ap, estadoSalud == EstadoSalud.DEBIL, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		p: Principe(ubicacionActual == null)
	then
		System.out.println("Buttercup y Westley llegan a la conclusión que al no decir \"Si quiero\" ella no se ha casado");
		modify(b){
			setEstadoCivil(EstadoCivil.SOLTERO);
		}
		modify(p){
			setEstadoCivil(EstadoCivil.SOLTERO);
		}
		System.out.println("El príncipe aparece");
	    modify(p){
			setUbicacionActual(ap);
		}
end

rule "A sufrimiento"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, estadoCivil == EstadoCivil.SOLTERO)
		w: Westley(ubicacionActual == ap)
		p: Principe(ubicacionActual == ap, estadoCivil == EstadoCivil.SOLTERO)
	then
		
		System.out.println("Westley y el prícipe se van a enfrentar en un duelo \"a sufrimiento\" ");
		
		System.out.println("Westley le explica al príncipe cómo lo va a mutiliar");
		modify(w){
			setEstadoSalud(EstadoSalud.RECUPERADO);
		}
		System.out.println("El príncipe se asusta y lo atan a la silla");
end

rule "Huida"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap)
		w: Westley(ubicacionActual == ap)
		p: Principe(ubicacionActual == ap)
		sc : SalonCastillo()
		i: Inigo(ubicacionActual == sc, estadoSalud == EstadoSalud.HERIDO)
		f: Fezzik(ubicacionActual == null)
		pC: PatioCastillo()
	then
		System.out.println("Íñigo aparece");
		modify(i){
			setUbicacionActual(ap);
		}
		System.out.println("Westley realmente sigue débil");
		modify(w){
			setEstadoSalud(EstadoSalud.DEBIL);
		}
		System.out.println("Fezzik aparece con cuatro caballos");
		modify(f){
			setUbicacionActual(pC);
		}
end

//Consultas
rule "Consulta Quien" 
	when 
		con: ConsultaQuien()
		p: Personaje (nombre == con.getNombre())
	then
		System.out.println("ENTRO REGLA CONSULTA QUIEN");
		System.out.println(p.toString());
		Archivo.getUnicaInstancia().escribir(p.toString() + "\n\n");
end

rule "Consulta Quien No Existe"
	when 
		con: ConsultaQuien()
		not Personaje (nombre == con.getNombre)
	then
		System.out.println("No sé quien es " + con.getNombre() + " en el acto " + con.getActo());
		Archivo.getUnicaInstancia().escribir("No sé quien es " + con.getNombre() + " en el acto " + con.getActo()+ "\n");
end

rule "Consulta Que"
	when
		con: ConsultaQue()
	then
		System.out.println("CONSULTA QUE");
		System.out.print("En el acto " + con.getActo().getNumActo() + "." + " ");
		Archivo.getUnicaInstancia().escribir("En el acto " + con.getActo().getNumActo() + "." + "\n");
		Archivo.getUnicaInstancia().escribirInf();
		Archivo.getUnicaInstancia().escribir("Fin pregunta que\n\n");
		//System.out.println(Archivo.getUnicaInstancia().getpath());
end


rule "Consulta si Sexo"
 	when 
  		consulta : ConsultaSi()
  		eval (Sexo.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
 	then
  		modify(p){
   			setSexo(Sexo.get(consulta.getValorAtributo()));
  		}
 		//insert (consulta.getConsulta()); 
  		System.out.println("SE PUEDE HACER ");
  		System.out.println( p.getNombre() +" es "+ p.getSexo());
end



rule "Consulta si Lugar" 
	salience 10 
	when 
		consulta: ConsultaSi()
		lugar: Lugar(nombre == consulta.getValorAtributo())
		p: Personaje(nombre == consulta.getNombre())
	then 
		modify(p){
			setUbicacionActual(lugar)
		}
		//insert (consulta.getConsulta());
		
		System.out.println("ENTRO EN CONSULTA SI LUGAR Y MODIFICO " + p.getNombre() + " en " + p.getUbicacionActual());
end 


rule "Consulta si Origen"
	salience 10
	when 
		consulta: ConsultaSi()
		eval (Origen.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
	then
		modify(p){
			setOrigen(Origen.get(consulta.getValorAtributo()))
		}
		//insert (consulta.getConsulta());
		
		System.out.println("ENTRO EN CONSULTA SI ORIGEN Y MODIFICO " + p.getNombre() + " en " + p.getOrigen());
end 

rule "Consulta si EstadoSalud"
	salience 10
	when 
		consulta: ConsultaSi()
		eval (EstadoSalud.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
	then
		modify(p){
			setEstadoSalud(EstadoSalud.get(consulta.getValorAtributo()))
		}
		//insert (consulta.getConsulta());
		
		System.out.println("ENTRO EN CONSULTA SI EstadoSalud Y MODIFICO " + p.getNombre() + " en " + p.getEstadoSalud());
end 

rule "Consulta si Profesion" 
	salience 10 
	when 
		consulta: ConsultaSi()
		profesion: Profesion(nombre == consulta.getValorAtributo())
		p: PersonajeCuento(nombre == consulta.getNombre())
	then 
		modify(p){
			setProfesion(profesion)
		}
		//insert (consulta.getConsulta());
		
		System.out.println("ENTRO EN CONSULTA SI profesion Y MODIFICO " + p.getNombre() + " en " + p.getProfesion());
end 
