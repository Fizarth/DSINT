package com.sample

import animales.*;
import lugares.*;
import personajes.*;
import relaciones.*;
import utilidades.*;
import java.util.*;
import profesiones.*;


//Creación de la base
rule "0.01 Creación Profesiones"
agenda-group "Acto0"
	then 
		insert(new Granjero());
		insert(new Indefinido());
		insert(new Pirateria());
end 

rule "0.02 Creación Lugares"
	then
		insert(new Granja());
		insert(new HabitacionN());
		insert(new Mar());
		insert(new BarcoPirata());	
end 

rule "0.03 Creación Animales"
	when 
		granja: Granja()
	then
		insert(new Caballo(granja));
		insert(new Cerdo(granja));
		insert(new Vaca(granja));
end
/*
rule "0.04 Creación Personajes Acto 0"
	when 
		hab: HabitacionN()
	then
		insert(new Abuelo(hab));
		insert(new Madre(hab));
		insert(new Nieto(hab));
end
*/

rule "Creacion Abuelo"
	when
		hab: HabitacionN()
		eval (!CharacterDeletor.getInstance().shouldDelete("Abuelo"))
	then
		insert(new Abuelo(hab));
end


rule "Creacion Madre"
	when
		hab: HabitacionN()
		eval (!CharacterDeletor.getInstance().shouldDelete("La Madre"))
	then
		insert(new Madre(hab));
end

rule "Creacion Nieto"
	when
		hab: HabitacionN()
		eval (!CharacterDeletor.getInstance().shouldDelete("El Nieto"))
	then
		insert(new Nieto(hab));
end



rule "0.05 Visita familiar"
  when
 	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.noTieneRelacion(ab))
    eval(ab.noTieneRelacion(md))
    eval(md.noTieneRelacion(nt))
  then
    FamiliarDe fm1 = new FamiliarDe(ab);
    FamiliarDe fm2 = new FamiliarDe(md);
    FamiliarDe fm3 = new FamiliarDe(nt);
    
    modify(nt){
    	addRelacion(fm1),
      	addRelacion(fm2);
    }
    
    modify(ab){
    	addRelacion(fm2),
    	addRelacion(fm3);
    }
    
    modify(md){
      	addRelacion(fm1),
     	addRelacion(fm3);
   	}
  	Archivo.getUnicaInstancia().addInf(md.getNombre() + " está cuidando de " 
  	+ nt.getNombre() +" que se encuentra " + nt.getEstadoSalud().getString() 
  	+ " y llega su " +ab.getNombre() + " de visita. " );
end

rule "0.06 Nieto está enfermo"
when
	hab: HabitacionN()
    nt: Nieto(ubicacionActual == hab, estadoSalud == EstadoSalud.ENFERMO)
    ab: Abuelo(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    md: Madre(ubicacionActual == hab, estadoSalud == EstadoSalud.VIVO)
    eval(nt.tieneRelacion(ab))
    eval(ab.tieneRelacion(md))
    eval(md.tieneRelacion(nt))
  then
  	modify(md){
  		setUbicacionActual(null);
  	}
  	Archivo.getUnicaInstancia().addInf(md.getNombre()+" se despide y "
  	+ ab.getNombre()+ " lee un cuento a " + nt.getNombre()+". ");
  	Archivo.getUnicaInstancia().addInf("El cuento es una historia de aventuras y amor.\n");
end

rule "0.07 Inicio cuento"
	when
		hab: HabitacionN()
		Nieto( ubicacionActual == hab )
		Abuelo( ubicacionActual == hab )
		Madre( ubicacionActual == null )
		granja: Granja()
		granjero: Granjero()
		eval (!CharacterDeletor.getInstance().shouldDelete("Westley"))
	then
		insert(new Westley(granja, granjero));
end

rule "0.07.1 Inicio cuento"
	when
		hab: HabitacionN()
		Nieto( ubicacionActual == hab )
		Abuelo( ubicacionActual == hab )
		Madre( ubicacionActual == null )
		granja: Granja()
		granjero: Granjero()
		eval (!CharacterDeletor.getInstance().shouldDelete("Buttercup"))
	then
		insert(new Buttercup(granja, granjero));
end

rule "0.08 Relacion Conocer"
    when
        p1 : Personaje(ubicacionActual != null, estadoSalud == EstadoSalud.VIVO)
        p2 : Personaje(nombre != p1.getNombre(), ubicacionActual == p1.getUbicacionActual(), estadoSalud == EstadoSalud.VIVO)
        eval (p1.noTieneRelacion(p2))
        eval (p2.noTieneRelacion(p1))
    then

        Relacion r = new ConoceA(p2);
        Relacion r2 = new ConocidoDe(p1);
        modify(p1){
        	addRelacion(r);
        }
        modify(p2){
        	addRelacion(r2);
        } 
end

rule "0.08.1 Relacion Finge Ser"
	when
		p1: PersonajeCuento()
		p2: PersonajeCuento(nombre!=p1.getNombre())
		r: Relacion() from p1.getRelacion(p2)
		eval(r.getNombre() == "finge ser")
	then
		modify(p2){
			setUbicacionActual(p1.getUbicacionActual()),
			setMotivacion(p1.getMotivacion()),
			setEstadoSalud(p1.getEstadoSalud()),
			setEstadoCivil(p1.getEstadoCivil()),
			setRelacionesPersonaje(p1.getRelacionesPersonaje());
		}
end

rule "0.09 Amor en la Granja"
	when
		g: Granja()
		gj: Granjero()
		wt: Westley( estadoSalud == EstadoSalud.VIVO, ubicacionActual == g, profesion == gj )
		bt: Buttercup( estadoSalud==EstadoSalud.VIVO, ubicacionActual == g, profesion == gj )
		eval(wt.esConocido(bt))
    	eval(bt.esConocido(wt))
	then
		Archivo.getUnicaInstancia().addInf(wt.getNombre() + " y " + bt.getNombre() + " son dos " 
		+ bt.getProfesion().toString()+"s. ");
		
		Relacion r1 = wt.getRelacion(bt);
		Relacion r2 = bt.getRelacion(wt);
		QuiereA q1 = new QuiereA(bt);
		QuiereA q2 = new QuiereA(wt);
		
		 modify(wt){
		 	removeRelacion(r1),
	      	addRelacion(q1),
	      	setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
	    }
	    
	    modify(bt){
	    	removeRelacion(r2),
	    	addRelacion(q2),
	    	setMotivacion(Motivacion.ESTAR_CON_WESTLEY);
	    }
	    Archivo.getUnicaInstancia().addInf("Cuando " + bt.getNombre() + " le manda una tarea a " 
		+wt.getNombre() + ", él siempre contesta \"Como desees\", que en realidad significa \"Te amo\". "  );
end

rule "0.10 Westley se va a hacer fortuna"
    when
    	m: Mar()
   		g: Granja()
        wt: Westley( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
   		pir: Pirateria()
   		inf: Indefinido()
   		eval (!CharacterDeletor.getInstance().shouldDelete("Robert el Pirata"))
    then
    	
    	modify(wt){
    		setMotivacion(Motivacion.GANAR_DINERO),
    		setUbicacionActual(m),
    		setProfesion(inf);
    	}
     	Archivo.getUnicaInstancia().addInf("Como " + wt.getNombre()+ " no tiene dinero se marcha a " 
     	+ m.getNombre() + " para hacer fortuna. ");
     	insert (new Pirata(m, pir));
end

rule "0.11 Westley muere"
    when
    	m: Mar()
    	p: Pirateria()
        wt: Westley(ubicacionActual == m, estadoSalud==EstadoSalud.VIVO, motivacion == Motivacion.GANAR_DINERO)
   		pir: Pirata(ubicacionActual == m, estadoSalud==EstadoSalud.VIVO, profesion == p)
    then
    	modify(wt){
    		setEstadoSalud(EstadoSalud.MUERTO);
    	}
     	Archivo.getUnicaInstancia().addInf("En " +m.getNombre()+ " " + wt.getNombre() 
     	+ " es asesinado por " + pir.getNombre()+". ");
end

rule "0.12 Buttercup odia al pirata"
    when
    	g :Granja()
    	m: Mar()
    	b: BarcoPirata()
    	Westley(estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    	bt: Buttercup( ubicacionActual == g, motivacion == Motivacion.ESTAR_CON_WESTLEY)
    	pr: Pirata( ubicacionActual == m )
    then
    	OdiaA od1 = new OdiaA(pr);
    	OdiadoPor od2 = new OdiadoPor(bt);
    	
	    modify(bt){
	        addRelacion(od1),
	        setMotivacion(Motivacion.DESCONOCIDA);
	    }
	 
	    modify(pr){
	    	setUbicacionActual(b),
	        addRelacion(od2);
	    }
	    Archivo.getUnicaInstancia().addInf(bt.getNombre()+ " " +bt.getRelacion(pr).toString() + 
	    " por la muerte de Westley y pierde su motivación.\n");
end


//Fin acto0

// Inicio Acto1
rule "1.01 Lugares Acto1"
agenda-group "Acto1"
	then
		insert(new BarcoMercenarios());
		insert(new Castillo());
		insert(new Espana());
		insert(new Bosque());
		insert(new AcantiladosLocura());
		insert(new CaminoMontana());
		insert(new CaminoRocoso());
end

rule"1.02 Profesiones Acto1"
	then
		insert(new Mercenario());
		insert(new Gobernante());
		insert(new Visir());
		insert(new Herrero());
		insert(new Desempleado());
end
/*
rule "1.03 Creación de Personajes Acto1"
	when 
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
	then
		insert(new Vizzini(bosque, mercenario ));
		insert(new Inigo(bosque, mercenario));
		insert(new Fezzik(bosque, mercenario));
		insert(new Rey(castillo, gobernante));
		insert(new Principe(castillo, gobernante));
		insert(new Conde(castillo, visir));
		insert(new PadreInigo(esp, herrero));
		insert(new AnguilaChillona(mar));
end
*/
rule "Creacion Vizzini"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Vizzini"))
	then
		insert(new Vizzini(bosque, mercenario ));
end

rule "Creacion Iñigo"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Iñigo Montoya"))
	then
		insert(new Inigo(bosque, mercenario));
end


rule "Creacion Fezzik"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Fezzik"))
	then
		insert(new Fezzik(bosque, mercenario));
end


rule "Creacion Rey"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("El Rey"))
	then
		insert(new Rey(castillo, gobernante));
end


rule "Creacion Principe"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Principe Humperdink"))
	then
		insert(new Principe(castillo, gobernante));
end


rule "Creacion Conde"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Tyrone Rugen"))
	then
		insert(new Conde(castillo, visir));
end

rule "Creacion Padre Iñigo"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Domingo Montoya"))
	then
		insert(new PadreInigo(esp, herrero));
end


rule "Creacion Anguila Chillona"
	when
		mercenario: Mercenario()
		gobernante: Gobernante()
		visir: Visir()
		castillo: Castillo()
		esp : Espana()
		herrero: Herrero()
		bosque: Bosque()
		mar: Mar()
		eval (!CharacterDeletor.getInstance().shouldDelete("Anguila Chillona"))
	then
		insert(new AnguilaChillona(mar));
end





rule "1.04 El Rey"
	when
		g: Gobernante()
		r: Rey(profesion == g)
		eval(r.noTieneTitulo())
	then
		modify(r){
			setTit(TituloNobiliario.REY);
		}
end

rule "1.05 El Príncipe"
	when
		g: Gobernante()
		p: Principe(profesion == g)
		eval(p.noTieneTitulo())
	then
		modify(p){
			setTit(TituloNobiliario.PRINCIPE);
		}
		
end
rule "1.06 El Conde"
	when
		v: Visir()
		c: Conde( profesion==v )
		eval(c.noTieneTitulo())
	then
		modify(c){
			setTit(TituloNobiliario.CONDE);
		}
end

rule "1.07 Rey y Príncipe son familia"
  when
  	g: Gobernante()
    pr: Principe(profesion == g)
    ry: Rey(profesion == g)
    eval(pr.esConocido(ry))
  then
  	Relacion r1 = pr.getRelacion(ry);
  	Relacion r2 = ry.getRelacion(pr);
    FamiliarDe fm1 = new FamiliarDe(ry);
    FamiliarDe fm2 = new FamiliarDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(fm1);
    }
    modify(ry){
    	removeRelacion(r2),
      	addRelacion(fm2);
    }
end

rule "1.08 Principe y Conde amigos"
  when
  	g: Gobernante()
  	v: Visir()
    pr: Principe( profesion == g)
    cd: Conde(profesion ==v )
    eval(pr.esConocido(cd))
  then
  	Relacion r1 = pr.getRelacion(cd);
  	Relacion r2 = cd.getRelacion(pr);
    Relacion am1 = new AmigoDe(cd);
    Relacion am2 = new AmigoDe(pr);
    
    modify(pr){
    	removeRelacion(r1),
      	addRelacion(am1);
    }
    
    modify(cd){
    	removeRelacion(r2),
      	addRelacion(am2),
      	setMotivacion(Motivacion.SERVIR_PRINCIPE);
    }
end

rule "1.09 El príncipe quiere a Buttercup"
  when
    pr: Principe( estadoSalud == EstadoSalud.VIVO )
    bt: Buttercup( estadoSalud == EstadoSalud.VIVO )
    eval(pr.noTieneRelacion(bt))
  then
    QuiereA q1 = new QuiereA(bt);
    modify(pr){
          addRelacion(q1),
          setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
    }
    Archivo.getUnicaInstancia().addInf(pr.getNombre() + " quiere a " + bt.getNombre()+ ". ");
end

rule "1.10 Buttercup prometida del príncipe"
  when
  	m: Mar()
  	des: Desempleado()
    pr: Principe(motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
    bt: Buttercup( estadoSalud == EstadoSalud.VIVO )
    Westley( estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m)
    c: Castillo()
    eval(bt.noTieneRelacion(pr))
  then
    Relacion p1 = new PrometidaDe(pr);
    Relacion p2 = new PrometidoDe(bt);
    modify(bt){
          addRelacion(p1),
          setProfesion(des),
          setUbicacionActual(c);
    }
    modify(pr){
          addRelacion(p2);
    }
    
    Archivo.getUnicaInstancia().addInf("Al pasar cinco años " + pr.getNombre() + " y " +
    bt.getNombre() + " se prometen y se anuncia la boda. ");
end

rule "1.11 Buttercup sale a pasear"
	when
		b: Bosque()
		c: Castillo()
		bt: Buttercup(ubicacionActual == c)
		we: Westley(estadoSalud == EstadoSalud.MUERTO)
		Principe(ubicacionActual == c, motivacion == Motivacion.ESTAR_CON_BUTTERCUP )
	then
		modify(bt){
			setUbicacionActual(b);
		}
	    Archivo.getUnicaInstancia().addInf(bt.getNombre()+ " sale a pasear por " 
	    + b.getNombre()+". ");
end			

rule "1.12 Secuestro Buttercup"
	when
		b: Bosque()
		mar: Mar()
		princesa: Buttercup(ubicacionActual == b)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
		i: Inigo(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
		f: Fezzik(ubicacionActual == b, profesion == mer, estadoSalud == EstadoSalud.VIVO)
	then
		modify(i){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(f){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(v){
			setUbicacionActual(mar),
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA);
		}
		modify(princesa){
			setUbicacionActual(mar);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + i.getNombre() + " y " 
		+ f.getNombre() + " secuestran a "+ princesa.getNombre()+". ");
end

rule "1.13 Huida por el mar"
	when
		mar: Mar()
		princesa: Buttercup(ubicacionActual == mar)
		mer: Mercenario()
		v: Vizzini(ubicacionActual == mar, profesion == mer, motivacion == Motivacion.SECUESTRAR_PRINCESA)
		i: Inigo(ubicacionActual == mar, profesion == mer)
		f: Fezzik(ubicacionActual == mar, profesion == mer)
		bm: BarcoMercenarios()
	then
		modify(v){
			setMotivacion(Motivacion.DECLARAR_GUERRA),
			setUbicacionActual(bm);
		}
		modify(princesa){
			setUbicacionActual(bm);
		}
		modify(i){
			setUbicacionActual(bm);
		}
		modify(f){
			setMotivacion(Motivacion.TENER_TRABAJO),
			setUbicacionActual(bm);
		}
		Archivo.getUnicaInstancia().addInf("Los mercenarios se llevan a "+princesa.getNombre()+
		" por " +mar.getNombre()+" para llegar a la frontera de Guilder. " +v.getNombre() +
		" quiere provocar que Florin declare la guerra a Guilder. ");
		
end

rule "1.14 Anguila ataca a buttercup"
	when 
		m: Mar()
		bm: BarcoMercenarios()
		bt: Buttercup(ubicacionActual == bm )
		a: AnguilaChillona(ubicacionActual == m)
	then 
		modify(bt){
			setEstadoSalud(EstadoSalud.EN_PELIGRO);
		}
		
		Archivo.getUnicaInstancia().addInf(bt.getNombre() + 
		" intenta escapar y en el agua es atacada por una " + a.getNombre() 
		+ ", ahora ella está " + bt.getEstadoSalud().getString() +". ");
end

rule "1.15 Fezzik salva a Buttercup"
	when 
		m: Mar()
		bm: BarcoMercenarios()
		bt: Buttercup( estadoSalud == EstadoSalud.EN_PELIGRO, ubicacionActual == bm )
		fz: Fezzik( ubicacionActual == bm )
		a: AnguilaChillona( ubicacionActual== m)
	then
		modify(bt){
			setEstadoSalud(EstadoSalud.VIVO);
		}
		modify(a){
			setEstadoSalud(EstadoSalud.MUERTO);
		}		
		Archivo.getUnicaInstancia().addInf(fz.getNombre()+" salva a " + bt.getNombre() + 
		" y "+ a.getNombre() + " muere. ");		
end

rule "1.16 Llegada a los acantilados"
	when
		bm: BarcoMercenarios()
		b:BarcoPirata()
		acantilados: AcantiladosLocura(  )
		AnguilaChillona(estadoSalud == EstadoSalud.MUERTO)
		v: Vizzini( ubicacionActual == bm)
		bt: Buttercup(ubicacionActual == bm)
		f: Fezzik( ubicacionActual == bm)
		i: Inigo( ubicacionActual == bm)
		p: Pirata( ubicacionActual == b )
	then
		modify(i){
			setUbicacionActual(acantilados)
		}
		modify(f){
			setUbicacionActual(acantilados)
		}
		modify(bt){
			setUbicacionActual(acantilados)
		}
		modify(v){
			setUbicacionActual(acantilados)		
		}
		modify(p){
			setMotivacion(Motivacion.SECUESTRAR_PRINCESA)
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + f.getNombre() + ", " 
		+ i.getNombre() + " y " + bt.getNombre() + " llegan a " + acantilados.getNombre()+". ");
		Archivo.getUnicaInstancia().addInf("Aparece "+ p.getNombre() + " que quiere " 
		+ p.getMotivacion().getString()+". ");
end

rule "1.17 Pirata llega a los acantilados"
	when
		b: BarcoPirata()
		cr: CaminoRocoso()
		ac: AcantiladosLocura()
		p: Pirata( ubicacionActual == b, estadoSalud == EstadoSalud.VIVO)
		i: Inigo( ubicacionActual == ac )
		v: Vizzini(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		bt: Buttercup(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
		f: Fezzik(ubicacionActual == ac, estadoSalud == EstadoSalud.VIVO)
	then
		EnemigoDe e1 = new EnemigoDe(p);
		EnemigoDe e2 = new EnemigoDe(i);
		EnemigoDe e3 = new EnemigoDe(f);
		EnemigoDe e4 = new EnemigoDe(v);
		modify(p){
			addRelacion(e2),
			addRelacion(e3),
			addRelacion(e4),
			setUbicacionActual(ac);
		}
		modify(bt){
			setUbicacionActual(cr);
		}
		modify(i){
			addRelacion(e1);
		}
		modify(v){
			addRelacion(e1),
			setUbicacionActual(cr);
		}
		modify(f){
			addRelacion(e1),
			setUbicacionActual(cr);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre() + ", " + f.getNombre() + " y " 
		+ bt.getNombre() + " siguen hacia " + cr.getNombre() +". ");
		Archivo.getUnicaInstancia().addInf(i.getNombre() + " se queda para enfrentar a "
		+ p.getNombre() +". ");
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " llega a " + ac.getNombre()+". ");
end

rule "1.18 Historia Domingo Montoya"
	when
		ac: AcantiladosLocura()
		h: Herrero(  )
		p: Pirata( ubicacionActual == ac )
		i: Inigo( ubicacionActual == ac, motivacion == Motivacion.SECUESTRAR_PRINCESA)
		pi: PadreInigo(estadoSalud == EstadoSalud.MUERTO, profesion == h)
		eval(i.noTieneRelacion(pi))
	then
		Relacion fm1 = new FamiliarDe(pi);
	    Relacion fm2 = new FamiliarDe(i);
	   
	    modify(i){
	    	setMotivacion(Motivacion.GANAR_DINERO),
	     	addRelacion(fm1);
	    }
	    modify(pi){
	      	addRelacion(fm2);
	    }
		Archivo.getUnicaInstancia().addInf(pi.getNombre() +" fue asesinado y su hijo " 
		+ i.getNombre() + " busca al hombre que tiene seis dedos para vengarse. ");
end

rule "1.19 Pirata vence a Iñigo"
	when
		ac: AcantiladosLocura()
		cr: CaminoRocoso()
		cm : CaminoMontana()
		mercenario: Mercenario()
		v: Vizzini(ubicacionActual == cr)
		bt: Buttercup(ubicacionActual == cr)
		p: Pirata(ubicacionActual == ac)
		i: Inigo(ubicacionActual == ac, profesion == mercenario, estadoSalud == EstadoSalud.VIVO)
	then
		modify(bt){
			setUbicacionActual(cm);
		}
		modify(v){
			setUbicacionActual(cm);
		}
		modify(i){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(p){
			setUbicacionActual(cr)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + i.getNombre() 
		+" y sigue la persecución. ");
		
end 

rule "1.20 Pirata vence a Fezzik"
	when
		cr: CaminoRocoso()
		cm : CaminoMontana()
		ac: AcantiladosLocura()
		des: Desempleado()
		p: Pirata(ubicacionActual == cr)
		f: Fezzik(ubicacionActual == cr, motivacion == Motivacion.TENER_TRABAJO)
		i: Inigo(estadoSalud == EstadoSalud.INCONSCIENTE, ubicacionActual == ac)
	then
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " llega a "+ cr.getNombre() +
		" y se enfrenta a " + f.getNombre() +". ");
		modify(f){
			setEstadoSalud(EstadoSalud.INCONSCIENTE)
		}
		modify(i){
			setProfesion(des),
			setUbicacionActual(null);
		}
		modify(p){
			setUbicacionActual(cm);
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " vence a " + f.getNombre()+
		" y continúa hacia " + cm.getNombre() +". ");
end

rule "1.21 Príncipe llega a los acantilados"
	when
		ac: AcantiladosLocura()
		cr: CaminoRocoso()
		des: Desempleado()
		f: Fezzik(ubicacionActual == cr, estadoSalud == EstadoSalud.INCONSCIENTE)
		pr: Principe(estadoSalud == EstadoSalud.VIVO, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		cd: Conde(estadoSalud == EstadoSalud.VIVO, motivacion == Motivacion.SERVIR_PRINCIPE)
	then
		modify(pr){
			setUbicacionActual(ac),
			setMotivacion(Motivacion.SALVAR_BUTTERCUP);
		}
		modify(cd){
			setUbicacionActual(ac);
		}
		modify(f){
			setProfesion(des),
			setUbicacionActual(null);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre() +" y " + cd.getNombre()+ 
		" llegan a los acantilados para "+pr.getMotivacion().getString() +". ");
end 

rule "1.22 Muere Vizzini"
	when 
		cm : CaminoMontana()
		p: Pirata(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		v: Vizzini(ubicacionActual == cm, estadoSalud == EstadoSalud.VIVO)
		Buttercup(ubicacionActual == cm)
		Fezzik(estadoSalud == EstadoSalud.INCONSCIENTE)
	then
		 Archivo.getUnicaInstancia().addInf(p.getNombre()+" alcanza a " + v.getNombre() +
		 " y se enfrentan a un duelo de lógica. ");
		modify(v){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		Archivo.getUnicaInstancia().addInf(v.getNombre()+ " termina " + 
		v.getEstadoSalud().getString() + " por el venero. \n");
end

/*** ACTO 2 El	príncipe	sigue	las	huellas	hasta	que	se	produce	el beso	de	amor	verdadero****/
rule "2.01 Creación Lugar y Profesion Acto 2"
agenda-group "Acto2"
	then
		insert(new Colina());
		insert(new ColinaAbajo());
		insert(new Espadachin());	
end 

rule "2.02 Principe llega al camino rocoso"
	when 
		ac: AcantiladosLocura()
		cr: CaminoRocoso()
		Vizzini(estadoSalud == EstadoSalud.MUERTO)
		p: Principe(ubicacionActual == ac)
		conde: Conde(ubicacionActual == ac)
	then 
		modify(p){
			setUbicacionActual(cr)
		}
		modify(conde){
			setUbicacionActual(cr)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " llega a " + cr.getNombre()+". ");
end 

rule "2.03 Pirata y Buttercup huyen"
	when 
		camino : CaminoMontana()
		v: Vizzini(estadoSalud == EstadoSalud.MUERTO)
		b: Buttercup(ubicacionActual == camino)
		p: Pirata(ubicacionActual == camino)
		colina: Colina()
	then 
		modify(b){
			setUbicacionActual(colina)
		}
		modify(p){
			setUbicacionActual(colina)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre()+" y " + b.getNombre()
		+" huyen hacia" +colina.getNombre()+". ");
end

rule "2.04 Principe descubre Vizzini muerto"
	when 
		cr: CaminoRocoso()
		col: Colina()
		cm: CaminoMontana()
		Pirata(ubicacionActual == col)
		Buttercup(ubicacionActual == col)
		p: Principe(ubicacionActual == cr)
		conde: Conde(ubicacionActual == cr)
	then 
		modify(p){
			setUbicacionActual(cm)
		}
		modify(conde){
			setUbicacionActual(cm)
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre() + " encuentra en "+ cm.getNombre()
		+ " a Vizzini muerto. ");
end 

rule "2.05 Buttercup descubre quien es su secuestrador"
	when 
		colina: Colina()
		but: Buttercup(ubicacionActual == colina)
		pir: Pirata(ubicacionActual == colina)
	then 
		Archivo.getUnicaInstancia().addInf(but.getNombre() +
		" descubre que ha sido secuestrada por " + pir.getNombre()+". ");
end

rule "2.06 Como Desees en la colina"
	when 
		co: Colina()
		coa: ColinaAbajo()
		m: Mar()
		we: Westley(estadoSalud == EstadoSalud.MUERTO, ubicacionActual == m, motivacion == Motivacion.GANAR_DINERO)
		bu: Buttercup(ubicacionActual == co)
		pi: Pirata(ubicacionActual == co)
		pir: Pirateria()
	then 
		
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " empuja a " + pi.getNombre()
		+ " " +coa.getNombre()+" mientras que este grita: ¡COMO DESEEES!. En ese momento "
		+ bu.getNombre()+ " se da cuenta que realmente es "+ we.getNombre()+". ");
		Relacion r1 = bu.getRelacion(pi);
		Relacion r2 = pi.getRelacion(bu);
		Relacion r3 = pi.getRelacion(we);
		Relacion r4 = we.getRelacion(pi);
		
		modify(bu){
			setUbicacionActual(coa),
			removeRelacion(r1);
		}
		
		modify(pi){
			setUbicacionActual(coa),
			removeRelacion(r3),
			removeRelacion(r2);
		}
		
		FingeSer f1 = new FingeSer(pi);
		
		ArrayList<Relacion> list = pi.getRelacionesPersonaje();
		
		modify(we){
			removeRelacion(r4),
			setEstadoSalud(EstadoSalud.VIVO),
			setUbicacionActual(coa),
			setProfesion(pir),
			setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP),
			addRelacionesPersonaje(list),
			addRelacion(f1);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " se tira por "	+ coa.getNombre()+". ");
		Archivo.getUnicaInstancia().addInf("Cuando están juntos se produce el beso de amor verdadero.\n");
end

/*** ACTO 3  Buttercup	y	Westley	llegan	al	pantano	hasta que	muere	el	rey****/

rule "3.01 Creacion Acto3"
	agenda-group "Acto3"
	then 
		insert(new PantanoFuego());
		insert(new PozoDesesperacion());
		insert(new Sirviente());
		System.out.println("Acto3");
end

rule "3.02 Animal y personaje Acto3"
	when 
		p: PantanoFuego()
	then
		insert(new RoedorAspectoGigantesco(p));
end

rule "Creacion Albino"
	when
		po : PozoDesesperacion()
		s: Sirviente()
		eval (!CharacterDeletor.getInstance().shouldDelete("Jai"))
	then
		insert(new Albino(po, s));
end

rule "3.03 Principe llega  a Colina"
	when 
		co: Colina()
		cm: CaminoMontana()
		p: Principe(ubicacionActual == cm)
		c: Conde(ubicacionActual == cm)
	then 
		modify(p){
			setUbicacionActual(co);
		}
		modify(c){
			setUbicacionActual(co);
		}
		Archivo.getUnicaInstancia().addInf(p.getNombre()+" llega a la colina buscando a Buttercup y su secuestrador. ");
end

rule "3.04 Adentrar en el pantano y Primer Horror"
	when 
		coa: ColinaAbajo()
		co: Colina()
		bu: Buttercup(ubicacionActual == coa)
		pa: PantanoFuego()
		we: Westley(ubicacionActual == coa)
		pr: Principe(ubicacionActual == co)
	then
		modify(bu){
			setUbicacionActual(pa);
		}
		modify(we){
			setUbicacionActual(pa);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() +" y " + we.getNombre() + " se adentran en " +pa.getNombre()+ ". ");
		Archivo.getUnicaInstancia().addInf("El primer horror son unas erupciones de fuego que salen del suelo. ");
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " +bu.getNombre() 
		+" las consiguen superar, ya que son precedidas de un sonido de burbujas. ");
end  

rule "3.05 Leyenda del capitan Robert y Segundo Horror"
	when
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa)
		p: Pirata(estadoSalud == EstadoSalud.VIVO)
	then 
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " cuenta a " + bu.getNombre() +
		 " como "+p.getNombre()+" le hace su ayudante y luego pasa a fingir que él es Robert. ");
		 modify(bu){
		 	setEstadoSalud(EstadoSalud.EN_PELIGRO);
		 }
		 Archivo.getUnicaInstancia().addInf(bu.getNombre() + " es tragada por arenas movedizas, está "+ 
		 bu.getEstadoSalud().getString()+ ", pero " +we.getNombre()+" la salva. Han superado el segundo horror: "+
		 "las arenas resplandecientes, ahora saben que aspecto tienen. ");
end 	

rule "3.06 Tercer Horror"
	when 
		pa: PantanoFuego()
		we: Westley(ubicacionActual == pa)
		bu: Buttercup(ubicacionActual == pa, estadoSalud == EstadoSalud.EN_PELIGRO)
		rag: RoedorAspectoGigantesco( ubicacionActual == pa)		
	then
		modify(bu){
		 	setEstadoSalud(EstadoSalud.VIVO);
		 }
		Archivo.getUnicaInstancia().addInf("Son atacados por un " +rag.getNombre()+". ");
		modify(we){
		 	setEstadoSalud(EstadoSalud.HERIDO);
		}
		modify(rag){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " mata a " + rag.getNombre()+", pero queda " +we.getEstadoSalud().getString()+". ");
		Archivo.getUnicaInstancia().addInf("Con esto superan el tercer horror. ");
end 

rule "3.07 Emboscada a la salida del pantano"
	when 
		pa: PantanoFuego()
		co: Colina()
		bo: Bosque()
		we: Westley(ubicacionActual == pa, estadoSalud ==EstadoSalud.HERIDO)
		bu: Buttercup(ubicacionActual == pa)
		pr: Principe (ubicacionActual == co)
		conde: Conde(ubicacionActual == co)
		rag: RoedorAspectoGigantesco( estadoSalud == EstadoSalud.MUERTO)
	then
		modify(bu){
			setUbicacionActual(bo);
		}
		modify(we){
			setUbicacionActual(bo);
		}
		modify(pr){
			setUbicacionActual(bo);
		}
		modify(conde){
			setUbicacionActual(bo);
		}
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " y " + bu.getNombre() + " salen de " + 
		pa.getNombre() + ", pero son emboscados por " + pr.getNombre()+". ");
end 

rule "3.08 promesa de vida"
	when 
		bo: Bosque()
		ca: Castillo()
		we: Westley(ubicacionActual == bo)
		bu: Buttercup(ubicacionActual == bo)
		pr: Principe(ubicacionActual == bo, motivacion == Motivacion.SALVAR_BUTTERCUP)		
		conde: Conde(ubicacionActual == bo)
		po: PozoDesesperacion()
	then 
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " se entrega, con la condicion de que " +
		 we.getNombre() + " seguirá con vida. ");
		 Relacion c = pr.getRelacion(we);
		 Relacion c1 = conde.getRelacion(we);
		 Relacion c2 = we.getRelacion(conde);
		 Relacion c3 = we.getRelacion(pr);
		 EnemigoDe r1 = new EnemigoDe(we);
		 EnemigoDe r2 = new EnemigoDe(pr);
		 EnemigoDe r3 = new EnemigoDe(conde);
		 
		modify(we){
			removeRelacion(c2),
			removeRelacion(c3),
			addRelacion(r2),
			addRelacion(r3),
			setEstadoSalud(EstadoSalud.INCONSCIENTE),
			setUbicacionActual(po);
		} 
		modify(bu){
			setUbicacionActual(null);
		}
		modify(pr){
			setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP),
			removeRelacion(c),
			addRelacion(r1),
			setUbicacionActual(null);
		}
		modify(conde){
			removeRelacion(c1),
			addRelacion(r1),
			setUbicacionActual(null);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre()+ " ordena al conde que mate a " + we.getNombre()+". ");
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " descubre que " + conde.getNombre() + " tiene 6 dedos. ");
		Archivo.getUnicaInstancia().addInf("El conde deja "+ we.getEstadoSalud().getString() + "a "+ we.getNombre()+". ");
		Archivo.getUnicaInstancia().addInf(conde.getNombre() + "," + bu.getNombre() + " y " + pr.getNombre() + " se dirigen a "+
		ca.getNombre()+". ");
		
end 

rule "3.09 Pozo de la Desesperación"
	when 
		ca: Castillo()
		po: PozoDesesperacion()
		s: Sirviente(  )
		we: Westley(ubicacionActual == po, estadoSalud == EstadoSalud.INCONSCIENTE)
		al: Albino( ubicacionActual == po , profesion == s)
		
	then 
		Archivo.getUnicaInstancia().addInf(we.getNombre() + " se despierta encerrado en " + po.getNombre() +". ");
		modify(we){
			setEstadoSalud(EstadoSalud.RECUPERADO);
		} 
		modify(al){
			setMotivacion(Motivacion.SERVIR_PRINCIPE);
		} 
		
		Archivo.getUnicaInstancia().addInf("El albino " +al.getNombre()+" le explica a Westley la tortura que le espera. ");
		
end 
//Muerte del rey
rule "3.10 La muerte del Rey"
	when 
		ca: Castillo()
		po: PozoDesesperacion()
		we: Westley(ubicacionActual == po, estadoSalud == EstadoSalud.RECUPERADO)
		rey: Rey( ubicacionActual == ca , estadoSalud == EstadoSalud.VIVO)
		Principe( ubicacionActual ==null )
		Conde( ubicacionActual ==null )
		Buttercup( ubicacionActual ==null )
	then 
		modify(rey){
			setEstadoSalud(EstadoSalud.MUERTO);
		} 
		
		Archivo.getUnicaInstancia().addInf("Se conoce la noticia de la muerte de "+rey.getNombre()+". \n");
end

/*** ACTO 4 	Presentación	de	la	Nueva	Reina	hasta la	muerte de	Westley ****/

rule "Creacion Acto4"
agenda-group "Acto4"
	then
		insert(new Guardia());
		insert(new PatioCastillo());
		insert(new BosqueLadrones());
		insert(new AposentosPrincesa());
end

rule "Creacion Anciana"
	when
		pa: PatioCastillo()
		ind: Indefinido()
		eval (!CharacterDeletor.getInstance().shouldDelete("Anciana Abucheadora"))
	then
		insert(new Anciana(pa,ind));
end


rule "Creacion Yalin"
	when
		ca: Castillo()
		gu: Guardia()
		eval (!CharacterDeletor.getInstance().shouldDelete("Yalin"))
	then
		insert(new Yalin(ca, gu));
end



rule "4.2 Sueño Buttercup"
	when
		pa: PatioCastillo()
		rey: Rey(estadoSalud == EstadoSalud.MUERTO)
		an: Anciana(ubicacionActual == pa)
		conde: Conde(ubicacionActual == null)
		bu: Buttercup(ubicacionActual == null)
		pr: Principe (ubicacionActual == null, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
	then
		Archivo.getUnicaInstancia().addInf("Tras la muerte del rey, " + pr.getNombre()+ " y " + 
		bu.getNombre()+" se casan y son proclamados reyes. Sin embargo, una " + an.getNombre() + 
		" recrimina a la nueva reina por renunciar de su amor verdadero. ");
		modify(rey){
			setEstadoSalud(EstadoSalud.VIVO);
		} 
		modify(conde){
			setUbicacionActual(pa);
		}
		modify(bu){
			setUbicacionActual(pa);
		}
		modify(pr){
			setUbicacionActual(pa);
		}	
		modify(an){
			setUbicacionActual(null);
		}
		
		Archivo.getUnicaInstancia().addInf(bu.getNombre()+" despierta y se da cuenta que se trataba de una pesadilla. ");	
		Archivo.getUnicaInstancia().addInf(rey.getNombre()+" todavía seguía con vida. ");
end

rule "4.3 Trato principe"
	when
	ca: Castillo()
	pa: PatioCastillo()	
	ap: AposentosPrincesa()
	po: PozoDesesperacion()
	we: Westley( ubicacionActual == po )
	Anciana( ubicacionActual ==null )
	pr: Principe (ubicacionActual == pa, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
	bu: Buttercup(ubicacionActual == pa)
	conde: Conde(ubicacionActual == pa, motivacion == Motivacion.SERVIR_PRINCIPE)
	then
		modify(conde){
			setUbicacionActual(ca);
		} 
		modify(bu){
			setUbicacionActual(ap);
		}
		modify(pr){
			setUbicacionActual(ca);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " hace un trato con " + bu.getNombre() + " para casarse con ella. ");
		Archivo.getUnicaInstancia().addInf("Si " +we.getNombre()+" llega antes de la fecha de la boda, pordrán irse los dos. ");
		
end

rule "4.3.1 Plan para declarar la guerra a Guilder"
	when
		ca: Castillo()
		ap: AposentosPrincesa()
		po: PozoDesesperacion()
		bo: Bosque( )
		pr: Principe (ubicacionActual == ca, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		bu: Buttercup(ubicacionActual == ap)
		conde: Conde(ubicacionActual == ca, motivacion == Motivacion.SERVIR_PRINCIPE)
		Westley( ubicacionActual == po, estadoSalud == EstadoSalud.RECUPERADO)
	then
		modify(pr){
			setMotivacion(Motivacion.DECLARAR_GUERRA);
		}
		modify(conde){
			setUbicacionActual(bo);
		}
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " planea matar a " +
		bu.getNombre() + " para incriminar a la nacion enemiga y " +pr.getMotivacion().getString()+". ");
end

rule "4.4 Tortura a Westley"
	when
	po: PozoDesesperacion()
	bo: Bosque()
	wes: Westley(ubicacionActual == po, estadoSalud == EstadoSalud.RECUPERADO)
	conde: Conde(ubicacionActual == bo, motivacion == Motivacion.SERVIR_PRINCIPE)
	
	then
		modify(conde){
			setMotivacion(Motivacion.ESTUDIAR_DOLOR),
			setUbicacionActual(po);
		}
		modify(wes){
			setEstadoSalud(EstadoSalud.EN_PELIGRO);
		}
		Archivo.getUnicaInstancia().addInf(conde.getNombre() + " declara que su objetivo es " +conde.getMotivacion().getString() +
		" en el cuerpo humano y empieza a torturar a "+wes.getNombre() + " en " + po.getNombre() +". "); 
	
end

rule "4.5 Pricipe ordena a Yalin"
	when
		ca: Castillo()
		bl: BosqueLadrones()
		gu: Guardia()
		pr: Principe(ubicacionActual == ca, motivacion == Motivacion.DECLARAR_GUERRA)
		ya: Yalin(ubicacionActual == ca, profesion == gu)
	then
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " ordena a " + ya.getNombre() + " vaciar " + bl.getNombre()+". ");
		modify(ya){
			setUbicacionActual(bl);
		}
		insert(new BrigadaBrutal());
end

rule "4.6 Reencuentro Iñigo y Fezzik"
	when
		bl: BosqueLadrones()
		des: Desempleado( )
		br: BrigadaBrutal()
		i: Inigo(ubicacionActual == null, profesion==des)
		fe: Fezzik(ubicacionActual == null, profesion==des)
		ya: Yalin( ubicacionActual == bl )
	then
		Relacion r1 = fe.getRelacion(i);
		Relacion r2 = i.getRelacion(fe);
		AmigoDe a1 = new AmigoDe(fe);
		AmigoDe a2 = new AmigoDe(i);
		modify(i){
			removeRelacion(r2),
			addRelacion(a1),
			setUbicacionActual(bl),
			setEstadoSalud(EstadoSalud.BORRACHO);
		}
		modify(fe){
			removeRelacion(r1),
			addRelacion(a2),
			setUbicacionActual(bl),
			setProfesion(br);			
		}
		
		Archivo.getUnicaInstancia().addInf(fe.getNombre() + " encuentra borracho a " + i.getNombre() + " en " + bl.getNombre()+". ");
		modify(ya){
			setUbicacionActual(null);
		}
end


rule "4.7 Iñigo y Fezzik buscan a Westley"
	when
		bl: BosqueLadrones()
		bo: Bosque()
		br: BrigadaBrutal()
		es:Espadachin(  )
		conde: Conde(estadoSalud == EstadoSalud.VIVO)
		i: Inigo(ubicacionActual == bl, estadoSalud == EstadoSalud.BORRACHO)
		PadreInigo( estadoSalud == EstadoSalud.MUERTO)
		fe: Fezzik(ubicacionActual == bl, profesion ==br)
	then
		Archivo.getUnicaInstancia().addInf(fe.getNombre() + " ayuda a " + i.getNombre() + " a recuperarse. ");
		
		Archivo.getUnicaInstancia().addInf(i.getNombre() + " se entera de quien es el hombre de seis dedos, el conde " +
		conde.getNombre()+". ");
		EnemigoDe e1= new EnemigoDe(conde);
		modify(i){
			addRelacion(e1),
			setProfesion(es),
			setMotivacion(Motivacion.VENGAR_PADRE),
			setUbicacionActual(bo),
			setEstadoSalud(EstadoSalud.RECUPERADO);
		}
		modify(fe){
			setUbicacionActual(bo);
		}
		Archivo.getUnicaInstancia().addInf("Deciden rescatar a Westley para que les ayude a entrar al castillo. ");
end

rule "4.8 Buttercup descubre mentira Principe"
	when
		ca: Castillo()
		ap: AposentosPrincesa()
		po: PozoDesesperacion()
		br: BrigadaBrutal()
		i: Inigo(motivacion == Motivacion.VENGAR_PADRE, estadoSalud == EstadoSalud.RECUPERADO)
		fe: Fezzik(profesion ==br)
		bu: Buttercup(ubicacionActual == ap)
		pr: Principe(ubicacionActual == ca, motivacion==Motivacion.DECLARAR_GUERRA)
		Westley( ubicacionActual ==po, estadoSalud == EstadoSalud.EN_PELIGRO)
	then
		OdiaA o1 = new OdiaA(pr);
		OdiadoPor o2 = new OdiadoPor(bu);
		modify (bu){
			addRelacion(o1),
			setUbicacionActual(ap);
		}
		modify (pr){
			addRelacion(o2),
			setUbicacionActual(po);
		}
		Archivo.getUnicaInstancia().addInf(bu.getNombre() + " descubre la mentira de " + pr.getNombre()+" y ella le insulta. ");
		Archivo.getUnicaInstancia().addInf(pr.getNombre() + " la encierra en " + ap.getNombre()+". ");
		

end

rule "4.9 Tortura extrema a Westley"
	when
		po: PozoDesesperacion()
		ca: Castillo()
		bo: Bosque()
		pr: Principe(UbicacionActual == po)
		wes: Westley(ubicacionActual == po, estadoSalud == EstadoSalud.EN_PELIGRO)
		conde: Conde(ubicacionActual == po)
		al: Albino(ubicacionActual==po, estadoSalud == EstadoSalud.VIVO )
	then
	
		Archivo.getUnicaInstancia().addInf("Impulsado por las palabras hirientes de Buttercup " + pr.getNombre()+
		" decide torturar hasta la muerte a " + wes.getNombre()+". "); 
		modify(wes){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
		
		modify(conde){
			setUbicacionActual(null);
		}
		modify (pr){
			setUbicacionActual(null);
		}
		modify (al){
			setUbicacionActual(bo);
		}
end
 
 
rule "4.10 Iñigo y Fezzik encuentran a Westley"
	when
		bo: Bosque()
		po: PozoDesesperacion()
		i: Inigo(ubicacionActual == bo, estadoSalud==EstadoSalud.RECUPERADO, motivacion == Motivacion.VENGAR_PADRE)
		fe: Fezzik(ubicacionActual == bo)
		wes: Westley(ubicacionActual == po)
		al: Albino(ubicacionActual==bo, estadoSalud == EstadoSalud.VIVO )
		Conde(ubicacionActual == null) 
		Principe(ubicacionActual == null)
	then
		modify(i){
			setEstadoSalud(EstadoSalud.VIVO),
			setUbicacionActual(po);
		}
		modify(fe){
			setUbicacionActual(po);
		}
		modify(al){
			setEstadoSalud(EstadoSalud.INCONSCIENTE);
		}
		Archivo.getUnicaInstancia().addInf(i.getNombre() + " y " + fe.getNombre() + " se encuentran con el sirviente "+
		"y lo interrogan hasta que " + fe.getNombre() + " lo deja " + al.getEstadoSalud().getString()+". ");
		Archivo.getUnicaInstancia().addInf("Al final consiguen encontrar la entrada del lugar secreto.\n");
end




/*** ACTO 5 || ACTO FINAL  Llegan	a	casa	del	Milagroso	Max	hasta	el	final. ****/


rule "Creacion Acto5"
	agenda-group "Acto5"
	then
		insert(new Curandero());
		insert(new Sacerdote());
		insert(new IglesiaCastillo());
		insert(new CasaMilagrosoMax());
		insert(new MurallaCastillo());
		insert(new PasilloCastillo());
		insert(new PuertaCastillo());
		insert(new SalonCastillo());
end

rule "Creacion Valerie"
	when
		cur: Curandero()
		cs: CasaMilagrosoMax()
		eval (!CharacterDeletor.getInstance().shouldDelete("Valerie"))
	then
		
		insert(new Valerie(cs, cur)); 
end

rule "Creacion Obispo"
	when
		sac: Sacerdote()
		ig: IglesiaCastillo()
		eval (!CharacterDeletor.getInstance().shouldDelete("Obispo Gangoso"))
	then
		
		insert(new Obispo(ig, sac));
end

rule "Creacion Max"
	when
		cur: Curandero()
		cs: CasaMilagrosoMax()
		eval (!CharacterDeletor.getInstance().shouldDelete("Milagroso Max"))
	then
		
		insert(new Max(cs, cur ));
end

rule "5.2 Comprar un milagro"
	when
		pd: PozoDesesperacion()
		cs: CasaMilagrosoMax()
		bb: BrigadaBrutal()
		cur: Curandero()
		i: Inigo(ubicacionActual == pd)
		w: Westley(ubicacionActual == pd, estadoSalud == EstadoSalud.MUERTO)
		f: Fezzik(ubicacionActual == pd, profesion == bb)
		m: Max(ubicacionActual == cs, profesion == cur, estadoSalud == EstadoSalud.VIVO)
	then
		modify(i){
			setUbicacionActual(cs);
		}
		modify(f){
			setUbicacionActual(cs);
		}
		modify(w){
			setUbicacionActual(cs);
		}
	    modify(m){
	          setMotivacion(Motivacion.GANAR_DINERO);
	    }
		Archivo.getUnicaInstancia().addInf(i.getNombre() + " y " + f.getNombre()+ " llevan a " + w.getNombre() +
		 " a " +cs.getNombre()+". ");
end

rule "5.3 Está Medio Muerto"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MUERTO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
	then
		modify(w){
			setEstadoSalud(EstadoSalud.MEDIO_MUERTO);
		}
		modify(w){
	          setMotivacion(Motivacion.AMOR_VERDADERO);
	    }
	    Archivo.getUnicaInstancia().addInf(m.getNombre() + " diagnostica que " + w.getNombre()+ " está " + 
	    w.getEstadoSalud().getString()+ ". Max le pregunta al cadáver de "+ w.getNombre()+
	     "¿Qué tiene que merezca la pena vivir? y Westley constesta \""+w.getMotivacion().getString()+"\". "); 
end

rule "5.4 Discusión de matrimorio"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO, motivacion == Motivacion.AMOR_VERDADERO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
	then
		modify(m){
	          setEstadoCivil(EstadoCivil.CASADO);
	    }
	    modify(v){
	          setEstadoCivil(EstadoCivil.CASADO);
	    }
	    Relacion fm1 = new FamiliarDe(v);
	    Relacion fm2 = new FamiliarDe(m);
	    ArrayList<Relacion> listM = m.getRelacionesPersonaje();
	    listM.add(fm1);
	    modify(m){
	      setRelacionesPersonaje(listM);
	    }
	     ArrayList<Relacion> listV = v.getRelacionesPersonaje();
	    listV.add(fm2);
	    modify(v){
	      setRelacionesPersonaje(listV);
	    }
		Archivo.getUnicaInstancia().addInf(m.getNombre() +" discute con su mujer " +v.getNombre()+" por negarse a resucitar a Westley. ");
end

rule "5.5 Causa noble"
	when
		cs: CasaMilagrosoMax()
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO, motivacion == Motivacion.AMOR_VERDADERO)
		f: Fezzik(ubicacionActual == cs)
		m: Max(ubicacionActual == cs, motivacion == Motivacion.GANAR_DINERO)
		v: Valerie(ubicacionActual == cs)
		princ: Principe(ubicacionActual ==null)
	then
		Archivo.getUnicaInstancia().addInf("Iñigo le dice a " + m.getNombre() + " de que si " + w.getNombre() +
		" revive, humillará a " + princ.getNombre()+". ");
		Relacion od1 = new OdiaA(princ);
    	Relacion od2 = new OdiadoPor(m);
    	
	    modify(m){
	          addRelacion(od1),
	          setMotivacion(Motivacion.HUMILLAR_PRINCIPE);
	    }
	    modify(princ){
	          addRelacion(od2);
	    }
	    
	    Archivo.getUnicaInstancia().addInf(m.getNombre() + " acepta que es una causa muy noble y hace una píldora. ");
end

rule "5.6 Plan de asalto"
	when
		cs: CasaMilagrosoMax()
		mc: MurallaCastillo()
		pc: PuertaCastillo(  )
		i: Inigo(ubicacionActual == cs)
		w: Westley(ubicacionActual == cs, estadoSalud == EstadoSalud.MEDIO_MUERTO)
		f: Fezzik(ubicacionActual == cs)
		max: Max(motivacion == Motivacion.HUMILLAR_PRINCIPE)
		ya : Yalin( ubicacionActual ==null )
	then
		AmigoDe a1 = new AmigoDe(w);
		AmigoDe a2 = new AmigoDe(f);
		AmigoDe a3 = new AmigoDe(i);
		Relacion r1 = w.getRelacion(f);
		Relacion r2 = w.getRelacion(i);
		modify(i){
			addRelacion(a1),
			setUbicacionActual(mc);
		}
		modify(f){
			addRelacion(a1),
			setUbicacionActual(mc);
		}
		modify(w){
			removeRelacion(r1),
			removeRelacion(r2),
			addRelacion(a2),
			addRelacion(a3),
			setUbicacionActual(mc),
			setEstadoSalud(EstadoSalud.DEBIL),
			setMotivacion(Motivacion.SALVAR_BUTTERCUP);
		}
		modify(ya){
			setUbicacionActual(pc);
		}
	    Archivo.getUnicaInstancia().addInf("La pildora surge efecto y trazan un plan para entrar al castillo. ");
end

rule "5.7 La Boda oficial primera parte"
	when
		ig: IglesiaCastillo()
		cast: Castillo()
		ap: AposentosPrincesa()
		r: Rey(ubicacionActual == cast)
		b: Buttercup(ubicacionActual == ap) 
		pr: Principe(ubicacionActual == null)
		cd: Conde(ubicacionActual == null)
		ob: Obispo(ubicacionActual == ig)
	then
		modify(r){
			setUbicacionActual(ig);
		}
		modify(b){
			setUbicacionActual(ig);
		}
		modify(pr){
			setUbicacionActual(ig);
		}
		modify(cd){
			setUbicacionActual(ig);
		}
	   Archivo.getUnicaInstancia().addInf("Comienza la boda entre "+b.getNombre() +" y "+  pr.getNombre()+". ");
	    
	   
end

rule "5.8 Inicio del plan"
	when
		pc: PuertaCastillo()
		mc: MurallaCastillo()
		y: Yalin(ubicacionActual == pc)
		i: Inigo(ubicacionActual == mc)
		w: Westley(ubicacionActual == mc)
		f: Fezzik(ubicacionActual == mc)
	then
		modify(i){
			setUbicacionActual(pc);
		}
		modify(f){
			setUbicacionActual(pc);
		}
		modify(w){
			setUbicacionActual(pc);
		}
	    Archivo.getUnicaInstancia().addInf("Comienza el plan para entrar en el castillo. ");
end

rule "5.9 La Boda oficial segunda parte"
	when
		ig: IglesiaCastillo()
		pc : PasilloCastillo()
		r: Rey(ubicacionActual == ig)
		b: Buttercup(ubicacionActual == ig)
		pr: Principe(ubicacionActual == ig)
		cd: Conde(ubicacionActual == ig)
		ob: Obispo(ubicacionActual == ig)
	then
		modify(cd){
			setUbicacionActual(pc);
		}
	    Archivo.getUnicaInstancia().addInf(cd.getNombre() + " abandona la boda con algunos guardias. ");
end

rule "5.10 Entrada al Castillo"
	when
		pc: PuertaCastillo()
		pas : PasilloCastillo()
		y: Yalin(ubicacionActual == pc)
		i: Inigo(ubicacionActual == pc)
		w: Westley(ubicacionActual == pc)
		f: Fezzik(ubicacionActual == pc)
	then
		Archivo.getUnicaInstancia().addInf("Iñigo, Fezzik y Westley fingen ser el fantasma del Pirata Roberts, "+
		"los guardias se asustan y salen corriendo. ");
	    modify(i){
			setUbicacionActual(pas);
		}
		modify(f){
			setUbicacionActual(pas);
		}
		modify(w){
			setUbicacionActual(pas);
		}
		Archivo.getUnicaInstancia().addInf("Yalin decide que, por el bien de su integridad física, prefiere darles la llave para entrar. ");
end

rule "5.11 La Boda oficial fin"
	when
		ig: IglesiaCastillo()
		pc : PasilloCastillo()
		cas : Castillo()
		r: Rey(ubicacionActual == ig)
		b: Buttercup(ubicacionActual == ig)
		pr: Principe(ubicacionActual == ig)
		ob: Obispo(ubicacionActual == ig)
	then
		
		modify(r){
			setUbicacionActual(cas);
		}
		modify(b){
			setEstadoCivil(EstadoCivil.CASADO),
			setUbicacionActual(cas);
		}
		modify(pr){
			setEstadoCivil(EstadoCivil.CASADO),
			setUbicacionActual(null);
		}
		
	    Archivo.getUnicaInstancia().addInf("Finalmente, acaba la ceremonia y " + b.getNombre() + " y " +pr.getNombre() + " están casados. ");
end

rule "5.12 Encuentro con el Conde"
	when
		pas : PasilloCastillo()
		sc : SalonCastillo()
		c: Conde(ubicacionActual == pas)
		i: Inigo(ubicacionActual == pas)
		w: Westley(ubicacionActual == pas)
		f: Fezzik(ubicacionActual == pas)
	then
		EnemigoDe e1 = new EnemigoDe(i);
	    Archivo.getUnicaInstancia().addInf(i.getNombre() + " mata a los guardias y " + c.getNombre() + " sale huyendo. ");
	    modify(i){
			setUbicacionActual(sc);
		} 
		Archivo.getUnicaInstancia().addInf("Iñigo persigue al conde. ");
		modify(c){
			addRelacion(e1),
			setUbicacionActual(sc);
		} 
		Archivo.getUnicaInstancia().addInf(w.getNombre() + " desaparece y ");
		
	    modify(w){
			setUbicacionActual(null);
		}   
		modify(f){
			setUbicacionActual(null);
		} 
		Archivo.getUnicaInstancia().addInf(f.getNombre() + " no sabe qué hacer. ");
end

rule "Charla con el Rey"
	when
		cas : Castillo()
		ap: AposentosPrincesa()
		r: Rey(ubicacionActual == cas)
		b: Buttercup(ubicacionActual == cas, estadoCivil == EstadoCivil.CASADO)
		eval(b.esConocido(r))
	then
		Archivo.getUnicaInstancia().addInf(b.getNombre()+" siente aprecio por " +r.getNombre()+". ");
		Relacion r1 = b.getRelacion(r);
		Relacion r2 = r.getRelacion(b);
		Relacion am1 = new AmigoDe(r);
    	Relacion am2 = new AmigoDe(b);
    	
	    modify(b){
	    	removeRelacion(r1),
	        addRelacion(am1),
			setUbicacionActual(ap),
			setMotivacion(Motivacion.SUICIDARSE);
	    }
	    
	    modify(r){
	    	removeRelacion(r2),
	        addRelacion(am2),
			setUbicacionActual(null);
	    }
	    
	    Archivo.getUnicaInstancia().addInf(b.getNombre()+" le dice a "+r.getNombre()
	    +" que lo ha hecho por él y que se suicidadrá en sus aposentos. ");
	   
end

rule "Enfrentamiento con el Conde"
	when
		sc : SalonCastillo()
		c: Conde(ubicacionActual == sc)
		i: Inigo(ubicacionActual == sc)
	then
	    Archivo.getUnicaInstancia().addInf("Al llegar al salón el conde lanza un cuchillo que hiere a Iñigo. ");
	    modify(i){
			setEstadoSalud(EstadoSalud.HERIDO);
		}   
end

rule "Reencuentro a tiempo"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, motivacion == Motivacion.SUICIDARSE)
		w: Westley(ubicacionActual == null, estadoSalud == EstadoSalud.DEBIL, motivacion == Motivacion.SALVAR_BUTTERCUP)
	then
		Archivo.getUnicaInstancia().addInf(b.getNombre()+" intenta suicidarse, pero "+w.getNombre()+" la detiene. ");
		modify(b){
			setMotivacion(Motivacion.ESTAR_CON_WESTLEY);
		}
		modify(w){
		setUbicacionActual(ap),
			setMotivacion(Motivacion.ESTAR_CON_BUTTERCUP);
		}
		Archivo.getUnicaInstancia().addInf("De la alegría, Buttercup se lanza a darle amor a Westley, pero este está débil. ");
end

rule "Prepárate a morir"
	when
		sc : SalonCastillo()
		c: Conde(ubicacionActual == sc)
		i: Inigo(ubicacionActual == sc, estadoSalud == EstadoSalud.HERIDO)
	then
		Archivo.getUnicaInstancia().addInf("Iñigo saca nuevas fuerzas y comienza su contraataque al conde repitiendo: ");
	    Archivo.getUnicaInstancia().addInf("\"Hola, me llamo Íñigo Montoya. Tú mataste a mi padre. Prepárate a morir.\" ");
	    Archivo.getUnicaInstancia().addInf("Consigue intimidar al conde hasta que este ruega por su vida, pero Iñigo cumple su venganza. ");
		modify(c){
			setEstadoSalud(EstadoSalud.MUERTO);
		}
end

rule "Vacío legal"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, motivacion == Motivacion.ESTAR_CON_WESTLEY, estadoCivil == EstadoCivil.CASADO)
		w: Westley(ubicacionActual == ap, estadoSalud == EstadoSalud.DEBIL, motivacion == Motivacion.ESTAR_CON_BUTTERCUP)
		p: Principe(ubicacionActual == null, estadoCivil == EstadoCivil.CASADO)
	then
		Archivo.getUnicaInstancia().addInf("Buttercup y Westley llegan a la conclusión que al no decir \"Si quiero\" ella no se ha casado. ");
		modify(b){
			setEstadoCivil(EstadoCivil.SOLTERO);
		}
		modify(p){
			setEstadoCivil(EstadoCivil.SOLTERO);
		}
		Archivo.getUnicaInstancia().addInf("El príncipe aparece en la puerta de los aposentos con la intención de matar a Westley. ");
	    modify(p){
	    	setMotivacion(Motivacion.MATAR_WESTLEY),
			setUbicacionActual(ap);
		}
end

rule "A sufrimiento"
	when
		ap : AposentosPrincesa()
		b: Buttercup(ubicacionActual == ap, estadoCivil == EstadoCivil.SOLTERO)
		w: Westley(ubicacionActual == ap)
		p: Principe(ubicacionActual == ap, estadoCivil == EstadoCivil.SOLTERO, motivacion==Motivacion.MATAR_WESTLEY)
	then
		
		Archivo.getUnicaInstancia().addInf("Westley y el prícipe se van a enfrentar en un duelo \"a sufrimiento\", ");
		
		Archivo.getUnicaInstancia().addInf("Westley le explica al príncipe cómo lo va a mutiliar. ");
		modify(w){
			setEstadoSalud(EstadoSalud.RECUPERADO);
		}
		modify(p){
			setMotivacion(Motivacion.SEGUIR_VIVO);
		}
		Archivo.getUnicaInstancia().addInf("El príncipe se asusta y lo atan a la silla. ");
end

rule "Reunión final"
	when
		ap : AposentosPrincesa()
		pC: PatioCastillo()
		sc : SalonCastillo()
		
		b: Buttercup(ubicacionActual == ap, estadoCivil == EstadoCivil.SOLTERO)
		w: Westley(ubicacionActual == ap, estadoSalud == EstadoSalud.RECUPERADO)
		p: Principe(ubicacionActual == ap, motivacion == Motivacion.SEGUIR_VIVO)
		i: Inigo(ubicacionActual == sc, estadoSalud == EstadoSalud.HERIDO)
		f: Fezzik(ubicacionActual == null)
	then
		Archivo.getUnicaInstancia().addInf("Iñigo consigue llegar hasta los aposentos malherido y se descubre que ");
		modify(i){
			setUbicacionActual(ap);
		}
		Archivo.getUnicaInstancia().addInf("Westley realmente sigue débil. ");
		modify(w){
			setEstadoSalud(EstadoSalud.DEBIL);
		}
		Archivo.getUnicaInstancia().addInf("Fezzik aparece con cuatro caballos con los que poder irse del castillo. ");
		modify(f){
			setUbicacionActual(pC);
		}
end

rule "Huida del Castillo"
	when
		ap : AposentosPrincesa()
		pC: PatioCastillo()
		b: Buttercup(ubicacionActual == ap)
		w: Westley(ubicacionActual == ap, estadoSalud == EstadoSalud.DEBIL)
		i: Inigo(ubicacionActual == ap, estadoSalud == EstadoSalud.HERIDO)
		f: Fezzik(ubicacionActual == pC)
	then
		Archivo.getUnicaInstancia().addInf("Los cuatro cabalgan hacia la libertad. ");
		modify(i){
			setUbicacionActual(null);
		}
		modify(w){
			setUbicacionActual(null);
		}
		modify(f){
			setUbicacionActual(null);
		}
		modify(b){
			setUbicacionActual(null);
		}
		Archivo.getUnicaInstancia().addInf("Al amanecer todos estaban a salvo.\n");
end

rule "Fin del cuento"
	when
		Buttercup(ubicacionActual == null)
		Westley(ubicacionActual == null, estadoSalud == EstadoSalud.DEBIL)
		Inigo(ubicacionActual == null, estadoSalud == EstadoSalud.HERIDO)
		Fezzik(ubicacionActual == null)
		ab: Abuelo(estadoSalud == EstadoSalud.VIVO)
		ni: Nieto(estadoSalud == EstadoSalud.ENFERMO)
	then
		Archivo.getUnicaInstancia().addInf("El "+ab.getNombre() + " termina de narrar el cuento y "+
		ni.getNombre()+" se va a dormir. Antes de despedirse el niño le pide a su abuelo que "+
		"vuelva a leerle el cuento al día siguiente. El abuelo contesta \"como desees\". \n");
		modify(ab){
			setUbicacionActual(null);
		}
end
//Consultas
rule "Consulta Quien" 
	when 
		con: ConsultaQuien()
		p: Personaje (nombre == con.getNombre())
	then
		Archivo.getUnicaInstancia().escribir(p.toString() + "\n\n");
end

rule "Consulta Quien No Existe"
	when 
		con: ConsultaQuien()
		not Personaje (nombre == con.getNombre)
	then
		Archivo.getUnicaInstancia().escribir("No sé quien es " + con.getNombre() + " en el acto " + con.getActo()+ "\n\n");
end

rule "Consulta Que"
	when
		con: ConsultaQue()
	then
		System.out.print("En el acto " + con.getActo().getNumActo() + "." + " ");
		Archivo.getUnicaInstancia().escribir("En el acto " + con.getActo().getNumActo() + "." + "\n");
		Archivo.getUnicaInstancia().escribirInf();
		Archivo.getUnicaInstancia().escribir("\n\n");
end

rule "Consulta si Sexo"
 	when 
  		consulta : ConsultaSi()
  		eval (consulta.getValorAtributo() != null)
  		eval (Sexo.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
 	then
  		modify(p){
   			setSexo(Sexo.get(consulta.getValorAtributo()));
  		}
end

rule "Consulta si Lugar" 
	when 
		consulta: ConsultaSi()
		lugar: Lugar(nombre == consulta.getValorAtributo())
		p: Personaje(nombre == consulta.getNombre())
	then 
		modify(p){
			setUbicacionActual(lugar)
		}
end 

rule "Consulta si Origen"
	when 
		consulta: ConsultaSi()
		eval (Origen.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
	then
		modify(p){
			setOrigen(Origen.get(consulta.getValorAtributo()))
		}
end 

rule "Consulta si EstadoSalud"
	when 
		consulta: ConsultaSi()
		eval (EstadoSalud.isValor(consulta.getValorAtributo()))
 		p: Personaje(nombre == consulta.getNombre())
	then
		modify(p){
			setEstadoSalud(EstadoSalud.get(consulta.getValorAtributo()))
		}
end 

rule "Consulta si Profesion" 
	when 
		consulta: ConsultaSi()
		profesion: Profesion(nombre == consulta.getValorAtributo())
		p: PersonajeCuento(nombre == consulta.getNombre())
	then 
		modify(p){
			setProfesion(profesion)
		}
		
end

rule "Consulta si no existe" 
	when 
		consulta: ConsultaSi(valorAtributo == null)
	then 
		CharacterDeletor.getInstance().setPersonaje(consulta.getNombre());
end








