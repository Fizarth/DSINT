package com.sample
 
import com.sample.DroolsTest.Message;
import animales.*;
import lugares.*;
import personajes.*;
import relaciones.*;
import utilidades.*;
import java.util.*;
import profesiones.*;


rule "Creacion Profesiones"
	//agenda-group "Acto0"
	then 
		insert(new BrigadaBrutal());
		insert(new Curandero());
		insert(new Desempleado());
		insert(new Espadachin());
		insert(new Gobernante());
		insert(new Granjero());
		insert(new Guardia());
		insert(new Herrero());
		insert(new Indefinido());
		insert(new Mercenario());
		insert(new Pirateria());
		insert(new Sacerdote());
		insert(new Sirviente());
		insert(new Visir());
		System.out.println("Creo las profesiones");
end 

rule "Creacion Lugares"
	then
		insert(new AcantiladosLocura());
		insert(new Bosque());
		insert(new BosqueLadrones());
		insert(new CaminoMontana());
		insert(new CasaMilagrosoMax());
		insert(new Castillo());
		insert(new Espana());
		insert(new Granja());
		insert(new HabitacionNino());
		insert(new Mar());
		insert(new PantanoFuego());
		insert(new PozoDesesperacion());	
		System.out.println("Creo los lugares");	
end 

rule "Creacion Personajes Acto 0"
	agenda-group "Acto0"
	then
		insert(new Westley());
		insert(new Buttercup());
		System.out.println("Acto 0: Creo los personajes");
end

rule "Nieto es"
  when
    $nt: Personaje(nombre == "El Nieto")
    $ab: Personaje(nombre == "Abuelo")
    $md: Personaje(nombre == "La Madre") 
  then
    Relacion fm1 = new FamiliarDe($ab);
    Relacion fm2 = new FamiliarDe($md);
    ArrayList<Relacion> listant = $nt.getRelacionesPersonaje();
    listant.add(fm1);
    listant.add(fm2);
    modify($nt){
      setRelacionesPersonaje(listant);
    }
   // System.out.println("El nieto es familiar del abuelo y la madre" );
    System.out.println($nt.getNombre() + " es " + $nt.getRelacionesPersonaje().get(0) + " y "+ 
    $nt.getRelacionesPersonaje().get(1) );
end


rule "Abuelo es"
  when
    $nt: Personaje(nombre == "El Nieto")
    $ab: Personaje(nombre == "Abuelo")
    $md: Personaje(nombre == "La Madre") 
  then
    Relacion fm1 = new FamiliarDe($nt);
    Relacion fm2 = new FamiliarDe($md);
    ArrayList<Relacion> listaab = $ab.getRelacionesPersonaje();
    listaab.add(fm1);
    listaab.add(fm2);

    modify($ab){
      setRelacionesPersonaje(listaab);
    }
    System.out.println($ab.getNombre() + " es " + $ab.getRelacionesPersonaje().get(0) + " y "+ 
    $ab.getRelacionesPersonaje().get(1) );
end

rule "Madre es"
  when
    $nt: Personaje(nombre == "El Nieto")
    $ab: Personaje(nombre == "Abuelo")
    $md: Personaje(nombre == "La Madre") 
  then
    Relacion fm1 = new FamiliarDe($ab);
    Relacion fm2 = new FamiliarDe($nt);
    ArrayList<Relacion> listamd = $md.getRelacionesPersonaje();
    listamd.add(fm1);
    listamd.add(fm2);
    modify($md){
          setRelacionesPersonaje(listamd);
    }
    //System.out.println("Madre es familiar del abuelo y nieto" );
    System.out.println($md.getNombre() + " es " + $md.getRelacionesPersonaje().get(0) + " y "+ 
    $md.getRelacionesPersonaje().get(1) );
end
rule "Westley quiere a Buttercup"
  when
    $wt: Personaje(nombre == "Westley")
    $bt: Personaje(nombre == "Buttercup")
  then
    Relacion q1 = new QuiereA($bt);
    ArrayList<Relacion> listaR = $wt.getRelacionesPersonaje();
    listaR.add(q1);
    modify($wt){
          setRelacionesPersonaje(listaR);
    }
    System.out.println("Relaciones de westley: "+$wt.getRelacionesPersonaje());
end

rule "Buttercup quiere a Westley"
  when
    $wt: Personaje(nombre == "Westley")
    $bt: Personaje(nombre == "Buttercup")
  then
    Relacion q1 = new QuiereA($wt);
    ArrayList<Relacion> listaR = $bt.getRelacionesPersonaje();
    listaR.add(q1);
    modify($bt){
          setRelacionesPersonaje(listaR);
    }
    System.out.println("Relaciones de Buttercup: "+$bt.getRelacionesPersonaje());
end

rule "Principe quiere a Buttercup"
  when
    $pr: Personaje(nombre == "Principe")
    $bt: Personaje(nombre == "Buttercup")
    
  then
    Relacion q1 = new QuiereA($bt);
    ArrayList<Relacion> listaR = $pr.getRelacionesPersonaje();
    listaR.add(q1);
    modify($pr){
          setRelacionesPersonaje(listaR);
    }
    System.out.println("Relaciones de Principe: "+$pr.getRelacionesPersonaje());
end

rule "Añadir Lugar a Westley"

    when
    	p : Personaje(nombre == "Westley", ubicacionActual == null, estadoSalud == EstadoSalud.VIVO)
    	l : Lugar(nombre == "Granja")
    then
        modify(p){
			setUbicacionActual(l);
		}
		System.out.println("Se ha actualizado Ubicacion de: "+ p.getNombre() +" a " + l.getNombre());
end

rule "Añadir Lugar a Buttercup"
    when
    	p : Personaje(nombre == "Buttercup", ubicacionActual == null, estadoSalud == EstadoSalud.VIVO)
    	l : Lugar(nombre == "Granja")
    then
        modify(p){
			setUbicacionActual(l);
		}
		System.out.println("Se ha actualizado Ubicacion de: "+ p.getNombre() +" a " + l.getNombre());
end


rule "Relacion Conocer"
    when
        p1 : Personaje(ubicacionActual != null)
        p2 : Personaje(ubicacionActual == p1.getUbicacionActual(), nombre != p1.getNombre())
    then
    	System.out.println("Modifico: "+ p1.getNombre() + " y " + p2.getNombre());

        Relacion r = new ConoceA(p2);
        Relacion r2 = new ConocidoDe(p1);
        ArrayList<Relacion> listaR1 = p1.getRelacionesPersonaje();
        listaR1.add(r);
        //listaR1.add(r2);
        modify(p1){
        	//addRelacion(r);
        	setRelacionesPersonaje(listaR1);
        }
        
        //Relacion r3 = new ConoceA(p1);
        //Relacion r4 = new ConocidoDe(p1);
        ArrayList<Relacion> listaR2 = p2.getRelacionesPersonaje();
        listaR2.add(r2);
        //listaR2.add(r4);
        modify(p2){
        	//addRelacion(r2);
        	setRelacionesPersonaje(listaR2);
        }
        
        
        System.out.println("Relaciones de: " + p1.getNombre() + " = " + p1.getRelacionesPersonaje().toString());
        System.out.println("Relaciones de: " + p2.getNombre() + " = " + p2.getRelacionesPersonaje().toString());
     
end

rule "Westley se va a hacer fortuna"
    when
    	l: Lugar(nombre == "Mar")
   		lg: Lugar(nombre == "Granja");
        p1: Westley(nombre == "Westley", ubicacionActual== lg,motivacion == Motivacion.GANAR_DINERO)
   		
    then
    	modify(p1){
    		setUbicacionActual(l);
    	}
     System.out.println(p1.getNombre() + " se va a " + l.getNombre() + " para " + p1.getMotivacion());
end

rule "Westley muere"
    when
    	lm: Lugar(nombre == "Mar")
        p: Personaje(nombre == "Westley",ubicacionActual == lm)
   		p2: Personaje(nombre == "Robert el Pirata")
    then
    	modify(p){
    		setEstadoSalud(EstadoSalud.MUERTO);
    	}
     System.out.println(p.getNombre() + " esta " + p.getEstadoSalud() +" asesinado por " + p2.getNombre());
end

rule "Consulta Quien" 
	when 
		con : ConsultaQuien()
		p : Personaje (nombre == con.getNombre)
	then
		System.out.println("ENTRO REGLA CONSULTA QUIEN");
		p.toString();
end 

